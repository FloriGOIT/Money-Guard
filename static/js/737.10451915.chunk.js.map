{"version":3,"file":"static/js/737.10451915.chunk.js","mappings":"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","sources":["helpers/categories.jsx","helpers/timeInfo.jsx","pages/NewCard.jsx"],"sourcesContent":["\n\nexport const mainExpenses = [{ type: \"Groceries\", color: \"#ADFF2F\" },{ type: \"House care\", color: \"yellow\" },{ type: \"Self care\", color: \"#F08080\" },{ type: \"Family Care\", color: \"#6495ED\" },{ type: \"Utilities\", color: \"#B8860B\" },{ type: \"Education\", color: \"#008B8B\" },{ type: \"Leisure\", color: \"#BDB76B\" },{ type: \"Other types\", color: \"#FF8C00\" }]\nexport const mainIncomes = [{ type: \"Salary\", color: \"#FF8C00\" }, { type: \"Project\", color: \"#FFF8DC\" }, { type: \"Gift\", color: \"#7FFF00\" }, { type: \"Donation\", color: \"#90EE90\" }, { type: \"Loan\", color: \"#FFB6C1\" }, { type: \"Other\", color: \"#ADD8E6\" }]\nexport const allCategories = mainExpenses.concat(mainIncomes)","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","import style from '../components/moneyGuard.module.scss';\nimport {useEffect, useState } from 'react';\nimport { mainIncomes, mainExpenses,allCategories } from 'helpers/categories';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { Link,useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { today,months } from \"../helpers/timeInfo\";\n\n\nconst NewCard = ({ info }) => {\n\n  const [isExpense, setIsExpense] = useState(false);\n  const [isListCategoriesOn, setIsListCategoriesOn] = useState(false);\n  const [isOption, setIsOption] = useState('Select a category');\n  const [isDate, setIsDate] = useState(today);\n  const [isAmount, setIsAmount] = useState(\"\");\n  const [isDetails, setIsDetails] = useState(\"\");\n  const [isColor, setIsColor] = useState(\"\")\n  const navigate = useNavigate();\n\n  const monthPreLether = months.filter(month => month.number === isDate.split(\"-\")[1] );\n  const monthLether = monthPreLether[0].name;\n      const defaultCard = {\n      id: nanoid(),\n        date: isDate,\n        year: isDate.split(\"-\")[0],\n      month:monthLether,\n      type: isExpense,\n      category: isOption,\n      details: isDetails,\n        amount: isAmount,\n      color:isColor\n      }\n\n  const { id } = useParams();\n  \n  const selectedCard = info.find(card => card.id === id);\n\n  useEffect(()=>{ if (selectedCard) {\n    \n    setIsExpense(selectedCard.type); \n    setIsOption(selectedCard.category);\n    setIsDate(selectedCard.date);\n    setIsAmount(selectedCard.amount);\n    setIsDetails(selectedCard.details);\n    setIsColor(selectedCard.color)\n  }},[selectedCard])\n \n\n  let arrCategory = isExpense ? mainExpenses: mainIncomes ;\n  const buttonArrow = isListCategoriesOn ? <FaChevronUp /> : <FaAngleDown />;\n\n  const handleToggle = () => {\n    setIsExpense(prev => !prev);\n    setIsOption('Select a category');\n  };\n  const handleSelectedCategory = e => {\n    e.preventDefault();\n    setIsListCategoriesOn(prev => !prev);\n  };\n  const handleOption = input => {\n    setIsOption(input);\n    const identifyColor = allCategories.find(category => category.type === input)\n    setIsColor(identifyColor.color)\n    setIsListCategoriesOn(prev => !prev);\n  };\n\n\n  \n  const submitNewCard = (e) => {\n    e.preventDefault();\n    const index = info.findIndex(card=>card.id===id)\n    if (id) { info.splice(index, 1); }\n\n\n    if (isOption === 'Select a category') {\n      alert(\"Please select a type of income or expense.\");\n      return;\n    }\n\n    if (isAmount === '') {\n      alert(\"Please add a value higher than 0.00\");\n      return;\n    }\n    if (Number(defaultCard.year) < 2020) { alert(\"Please enter a date that starts with year 2020\"); return }\n    if (index !== -1) { info[index] = defaultCard }\n    else{info.push(defaultCard);}\n    \n    localStorage.setItem(\"listCards\", JSON.stringify(info))\n    setIsExpense(false);\n    setIsListCategoriesOn(false);\n    setIsOption('Select a category');\n    setIsDate(today);\n    setIsAmount(\"\");\n    setIsDetails(\"\");\n    setIsColor(\"\")\n\n\n  navigate(\"/\")\n \n    \n  };\n\n  return (\n    <section className={style.newCardWrapper}>\n      <div className={style.newCardContainer}>\n        <h2>Add transaction</h2>\n        \n        <form className={style.newCardForm} onSubmit={submitNewCard}>\n          <div className={style.newCardToggle}>\n            <span style={{ color: isExpense ? 'white' : 'rgb(194, 240, 126)' }}>\n              Income\n            </span>\n            <label className={style.switch}>\n              <input\n                type=\"checkbox\"\n                name=\"toggleNewCard\"\n                checked={isExpense}\n                onChange={handleToggle}\n                autoComplete=\"off\"\n              />\n              <span className={`${style.slider} ${style.round}`}></span>\n            </label>\n            <span style={{ color: isExpense ? 'rgb(211, 76, 76)' : 'white' }}>\n              Expense\n            </span>\n          </div>\n\n          <div className={`${style.rowFormNewCard} ${style.categorySelection}`}>\n            <input\n              type=\"text\"\n              value={isOption}\n              readOnly\n              name=\"selectAcategory\"\n              style={{ color: isOption === 'Select a category' ? \"rgba(206, 204, 204, 0.664)\" : \"white\" }}\n              autoComplete=\"off\"\n            />\n            <button\n              onClick={handleSelectedCategory}\n              className={style.rowFormNewCardElem2}\n            >\n              {buttonArrow}\n            </button>\n          </div>\n\n          {isListCategoriesOn ? (\n            <ul className={style.newCardList}>\n              {arrCategory.map(category => (\n                <li\n                  key={category.type}\n                  value={category.type.toLowerCase()}\n                  className={style.newCardOption }\n                  onClick={() => handleOption(category.type)}\n                >\n                  <input\n                    type=\"text\"\n                    name={category.type}\n                    value={category.type}\n                    readOnly\n                    autoComplete=\"off\"\n                    required\n                    className={!isExpense ? `${style.income}` : `${style.expense}`}\n                  />\n                </li>\n              ))}\n            </ul>\n          ) : null}\n\n          <div\n            className={`${style.rowFormNewCard} ${style.amountAndDateSelection}`}\n          >\n            <input\n              className={style.amount}\n              type=\"text\"\n              name=\"amount\"\n              pattern=\"^\\d+(\\.\\d{1,2})?$\"\n              value={isAmount}\n              title=\"Enter an amount highet than 0, that has the followig format 5, 5.5 or 5.00\"\n              placeholder=\"0.00\"\n              required\n              autoComplete=\"off\"\n              onChange={e=>setIsAmount(e.target.value)}\n            />\n            <input\n              type=\"date\"\n              name=\"dateNewCard\"\n              className={style.date}\n              onChange={e => setIsDate(e.target.value)}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className={`${style.rowFormNewCard} ${style.commentSelection}`}>\n            <input\n              type=\"text\"\n              name=\"comment\"\n              className={style.comment}\n              value={isDetails}\n              placeholder=\"-\"\n              autoComplete=\"off\"\n               onChange={e=>setIsDetails(e.target.value)}\n            />\n          </div>\n\n          <div className={style.newCardButtons}>\n\n              <button\n                type=\"submit\"\n                className={`${style.bigButton} ${style.selectedBtn}`}\n              >Add\n              </button>\n\n\n            <Link\n              to=\"/\"\n              className={`${style.bigButton} ${style.notSelectedBtn}`}\n            >\n              Cancel\n            </Link>\n          </div>\n        </form>\n      \n      \n      </div>\n    </section>\n  );\n};\n\nexport default NewCard;\n\n/*\n\n\n*/\n"],"names":["mainExpenses","type","color","mainIncomes","allCategories","concat","months","number","name","todayNewDate","Date","currentYear","getFullYear","currentMonth","getMonth","toString","padStart","currentMonthLetter","filter","el","Number","currentDay","getDate","today","_ref","info","_useState","useState","_useState2","_slicedToArray","isExpense","setIsExpense","_useState3","_useState4","isListCategoriesOn","setIsListCategoriesOn","_useState5","_useState6","isOption","setIsOption","_useState7","_useState8","isDate","setIsDate","_useState9","_useState10","isAmount","setIsAmount","_useState11","_useState12","isDetails","setIsDetails","_useState13","_useState14","isColor","setIsColor","navigate","useNavigate","monthLether","month","split","defaultCard","id","nanoid","date","year","category","details","amount","useParams","selectedCard","find","card","useEffect","arrCategory","buttonArrow","_jsx","FaChevronUp","FaAngleDown","className","style","children","_jsxs","onSubmit","e","preventDefault","index","findIndex","splice","alert","push","localStorage","setItem","JSON","stringify","checked","onChange","prev","autoComplete","value","readOnly","onClick","map","toLowerCase","input","identifyColor","handleOption","required","pattern","title","placeholder","target","Link","to"],"sourceRoot":""}