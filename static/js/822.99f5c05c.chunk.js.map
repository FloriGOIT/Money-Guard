{"version":3,"file":"static/js/822.99f5c05c.chunk.js","mappings":"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","sources":["components/Balance.jsx","components/DonutChart.jsx","components/ModalTime.jsx","components/TabletMobileDesign/AddButton.jsx","components/TabletMobileDesign/CurrencyAll.jsx","components/TabletMobileDesign/ListCardsAll.jsx","components/TabletMobileDesign/ModalTimeAll.jsx","components/TabletMobileDesign/NavAll.jsx","components/TabletMobileDesign/BigBtnWithColorAll.jsx","components/TabletMobileDesign/BigBtnNoColorAll.jsx","components/TabletMobileDesign/NewCoinFormAll.jsx","components/TabletMobileDesign/NewCardFormAll.jsx","components/TabletMobileDesign/StatisticsAll.jsx","components/TabletMobileDesign/AllinOne.jsx","helpers/categories.jsx","helpers/currencyBNR.jsx","helpers/timeInfo.jsx","webpack://react-homework-template/./src/components/moneyGuard.module.scss?adfa"],"sourcesContent":["import style from './moneyGuard.module.scss';\n\nconst Balance = ({info}) => {\n  const balance = info.reduce((acc, data) => {\n    if (data.type === false) {\n      return acc + Number(data.amount);\n    } else if (data.type === true) {\n      return acc - Number(data.amount);\n    }\n    return acc;\n  }, 0);\n\n  return (\n    <div className={style.totalSum}>\n      <p>\n        Balance: <br />\n        <span\n          style={{\n            color: balance <= 0 ? '#be242496' : 'rgb(194, 240, 126)',\n            fontWeight: 900,\n          }}\n        >\n          {' '}\n          {new Intl.NumberFormat('fr-FR').format(balance.toFixed(2))}\n        </span>{' '}\n        RON\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n","import { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport style from './moneyGuard.module.scss';\n\nconst CustomTooltip = ({ active, payload, info }) => {\n  if (active && payload && payload.length) {\n    const { category, total, color } = payload[0].payload;\n    const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n    const percentage = ((total / totalSum) * 100).toFixed(1);\n\n    return (\n      <div\n        style={{\n          background: '#1f1f1f',\n          padding: '8px 8px',\n          borderRadius: '10px',\n          color: '#fff',\n          border: `2px solid ${color}`,\n          boxShadow: '0 0 5px rgba(0,0,0,0.3)',\n        }}\n      >\n        <p style={{ margin: 0, fontWeight: 'bold', fontSize: '14px' }}>\n          {category}\n        </p>\n        <p style={{ margin: 0, fontSize: '14px' }}>{percentage}%</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst DonutChart = ({ info }) => {\n  const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n\n  return (\n    <div\n      style={{ textAlign: 'center', width: '300px', margin: '0 auto', position:\"static\" }}\n      className={style.chart}\n    >\n\n      <div style={{ margin: '0 auto', position:\"relative\" }}>\n        <PieChart width={285} height={285} style={{ margin: '0 auto' }}>\n          <Pie\n            data={info}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={140}\n            dataKey=\"total\"\n            nameKey=\"category\"\n          >\n            {info.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n          <Tooltip content={<CustomTooltip />} info={info} />\n        </PieChart>\n\n        {/* Center text */}\n        <div\n          style={{\n            position: 'absolute',\n            top: '120px',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            fontWeight: 'bold',\n            fontSize: '28px',\n            color: 'rgba(253, 248, 248, 0.56)',\n            paddingLeft:\"10px\"\n          }}\n        >\n          {totalSum.toLocaleString('en-US', { minimumFractionDigits: 2 })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import style from \"../moneyGuard.module.scss\"\nimport { IoAddSharp } from 'react-icons/io5';\n\n\nconst AddButton = () => {\n        return (<button type=\"button\" className={style.addButtonAll} >\n                <IoAddSharp className={style.addButtonSVG}/>\n        </button>)\n}\n\nexport default AddButton","import style from '../moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport AddButton from './AddButton';\n\nconst CurrencyAll = ({\n  listCurrencies,\n  handleAddCoinModal,\n  handleIdForCoinUpdate,\n  handleIdForCoinDel,\n}) => {\n  return (\n    <div className={style.preCurrencyTableAll}>\n      <table className={style.currencyTableAll}>\n        <thead>\n          <tr>\n            <th className={style.nonRate}></th>\n            <th className={style.withRate}>NBR</th>\n            <th className={style.withRate}>Buy</th>\n            <th className={style.withRate}>Sell</th>\n            <th onClick={handleAddCoinModal}>\n              <AddButton />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCurrencies.map(el => (\n            <tr key={el.id}>\n              <td className={style.nonRate}>{el.currencyName}</td>\n              <td className={style.withRate}>\n                {Number(el.nbrRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.buyRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.sellRate).toFixed(4)}\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '5px' }}\n                onClick={() => handleIdForCoinDel(el.id)}\n              >\n                <div className={style.deletCurrency}>\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '10px' }}\n                onClick={() => handleIdForCoinUpdate(el.id)}\n              >\n                <div className={style.editCurrency}>\n                  <MdOutlineModeEdit />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CurrencyAll;\n","import style from '../../components/moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { ImMinus } from 'react-icons/im';\nimport { PiPlusMinusBold } from 'react-icons/pi';\nimport { ImPlus } from 'react-icons/im';\nimport AddButton from './AddButton';\n\n\nconst ListCardsAll = ({ info, isYearMonthForFilter,handleAddCardModal,handleDeleteCard,handleIdForCardUpdate }) => {\n  \n  const filteredInfoOnPeriod = info.filter(el => Number(el.year) === Number(isYearMonthForFilter.year))\n                                   .filter(el => {if(isYearMonthForFilter.month === \"-\"){ return el }\n                                   else { return el.month === isYearMonthForFilter.month }\n                                   })\n  const handleAddNewCard = () => { handleAddCardModal(); handleIdForCardUpdate(\"\") }\n  return (\n    <div className={style.listCardsTabletContainer}>\n      <table>\n        <thead>\n          <tr>\n            <th  style={{width: \"100px\"}}>Date</th>\n            <th className={style.piPlusMinusBold}>\n              <PiPlusMinusBold className={style.plusMinus} />\n            </th>\n            <th style={{width: \"100px\"}}>Category</th>\n            <th style={{width: \"340px\"}}>Comment</th>\n            <th style={{width: \"80px\"}}>Sum</th>\n            <th onClick={handleAddNewCard}><AddButton /></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredInfoOnPeriod.map(card => (\n            <tr key={card.id} >\n              <td className={style.cardDate} style={{width: \"100px\"}}>{card.date}</td>\n              <td className={style.cardType}>\n                {card.type ? <ImPlus className={style.imPlus}/> : <ImMinus className={style.imMinus}/>}\n              </td>\n              <td className={style.cardCategory} style={{width: \"100px\"}}>{card.category}</td>\n              <td className={style.cardDetails} style={{width: \"340px\", color: \"wheat\"}}>{card.details}</td>\n              <td className={style.cardAmount} style={{width: \"80px\"}}>{new Intl.NumberFormat('fr-FR').format(Number(card.amount).toFixed(2))}</td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() =>handleDeleteCard(card.id)}>\n                <div className={style.deletCurrency} >\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() => { handleIdForCardUpdate(card.id);; handleAddCardModal()}}>\n                <div className={style.editCurrency} >\n                  <MdOutlineModeEdit/>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListCardsAll;\n\n/* <tbody></tbody>\n\n\n\n\n<table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Category</th>\n          <th>Comment</th>\n          <th>Sum</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id} style={{ backgroundColor: item.color }}>\n            <td>{item.date}</td>\n            <td>{item.type ? 'Income' : 'Expense'}</td>\n            <td>{item.category}</td>\n            <td>{item.details}</td>\n            <td>{item.amount}</td>\n            <td>\n              <button>Edit</button>\n            </td>\n            <td>\n              <button>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n\n*/\n","import style from '../../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { currentYear, currentMonthLetter } from 'helpers/timeInfo';\n\nconst ModalTimeAll = ({ info, handleYearMonth }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState(currentMonthLetter);\n  const [isModalYearOn, setisModalYearOn] = useState(false);\n  const [isModalMonthOn, setisModalMonthOn] = useState(false);\n\n  const modalRefYear = useRef(null);\n  const modalRefMonth = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        modalRefYear.current &&\n        !modalRefYear.current.contains(event.target)\n      ) {\n        setisModalYearOn(false);\n      }\n\n      if (\n        modalRefMonth.current &&\n        !modalRefMonth.current.contains(event.target)\n      ) {\n        setisModalMonthOn(false);\n      }\n    };\n\n    if (isModalYearOn || isModalMonthOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalYearOn, isModalMonthOn]);\n\n  const optionsYears = info\n    .map(el => el.year)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n\n  const optionsMonths = info\n    .filter(el => Number(el.year) === Number(isSelectedYear))\n    .map(el => el.month)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n  optionsMonths.push(\"-\");\n  const handleOptionYear = value => {\n    setisModalYearOn(false);\n    setIsSelectedMonth(\"-\");\n    handleYearMonth(prev => ({ ...prev, year: value, month:\"-\" }));\n    setIsSelectedYear(value);\n  };\n\n  const handleOptionMonth = value => {\n    setisModalMonthOn(false);\n    setIsSelectedMonth(value);\n    handleYearMonth(prev => ({ ...prev, month: value }));\n  };\n\n  return (\n    <div className={style.modalTimeSelect} ref={modalRefMonth}>\n      <div className={style.years}>\n        <div\n          className={\n            isModalYearOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedYear}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalYearOn(prev => !prev);\n            }}\n          >\n            {isModalYearOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalYearOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsYears.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionYear(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className={style.months}>\n        <div\n          className={\n            isModalMonthOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedMonth}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalMonthOn(prev => !prev);\n            }}\n          >\n            {isModalMonthOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalMonthOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsMonths.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionMonth(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModalTimeAll;\n","import { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from 'react-icons/im';\nimport style from \"../../components/moneyGuard.module.scss\"\n\nconst NavAll = ({ isHomeSelected, handleNav }) => {\n  return (\n    <nav>\n      <div\n        onClick={isHomeSelected ? null : handleNav}\n        className={\n          isHomeSelected\n            ? `${style.selectedNavAll}`\n            : `${style.notSelectedNavAll}`\n        }\n      >\n        <IoHomeSharp />\n        <span>Home</span>\n      </div>\n\n      <div\n        onClick={isHomeSelected ? handleNav : null}\n        className={\n          isHomeSelected\n            ? `${style.notSelectedNavAll}`\n            : `${style.selectedNavAll}`\n        }\n      >\n        <ImStatsDots />\n        <span>Statistics</span>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavAll\n","import style from \"../moneyGuard.module.scss\"\n\nconst BigBtnWithColorAll = ({valueBtn,type}) => {\n        return <button type={type} className={style.bigBtnWithColor} >{valueBtn}</button>\n}\n\nexport default BigBtnWithColorAll","import style from \"../moneyGuard.module.scss\"\n\n\nconst BigBtnNoColorAll = ({valueBtn, handleModal}) => {\n        return <button className={style.bigBtnNoColor} onClick={handleModal}>{valueBtn}</button>\n}\n\nexport default BigBtnNoColorAll","import style from '../moneyGuard.module.scss';\nimport { useState,useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCoinFormAll = ({\n  handleAddNewCoin,\n  handleAddCoinModal,\n  isIdForCoinUpdate,\n  isListCurrencies,\n}) => {\n\n  const [isCoin, setIsCoin] = useState({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n\n\n\n  useEffect(() => {\n      const coinToBeUpdated = isListCurrencies.find(\n    el => el.id === isIdForCoinUpdate\n    );\n    \n    if (isIdForCoinUpdate) {\n    setIsCoin(coinToBeUpdated);\n  } },[isIdForCoinUpdate, isListCurrencies])\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddNewCoin(isCoin);\n  };\n  const handleCancel = e => {\n    e.preventDefault();\n    setIsCoin({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n    handleAddCoinModal();\n  }\n  return (\n    <form className={style.newCoinFormAll} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"currencyName\"\n        pattern=\"^[A-Za-z]{3}$\"\n        title=\"Enter exactly 3 letters.Example: USD, RON, EUR\"\n        value={isCoin.currencyName}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Currency name\"\n        onChange={e =>\n          setIsCoin(prev => ({\n            ...prev,\n            currencyName: e.target.value.toUpperCase(),\n          }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"nbrRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.nbrRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Central bank rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, nbrRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"buyRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.buyRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Buy rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, buyRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"sellRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.sellRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Sell rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, sellRate: e.target.value }))\n        }\n      />\n      <div className={style.bigButtons}>\n        <BigBtnWithColorAll valueBtn=\"Save\" type=\"submit\" />\n        <BigBtnNoColorAll\n          valueBtn=\"Close\"\n          handleModal={handleCancel}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default NewCoinFormAll;\n","import style from '../moneyGuard.module.scss';\nimport { useEffect, useState } from 'react';\nimport {\n  mainIncomes,\n  mainExpenses,\n  allCategories,\n} from '../../helpers/categories';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { today, months } from '../../helpers/timeInfo';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCardFormAll = ({ info, handleAddCardModal, isIdForCardUpdate, handleIdForCardUpdate }) => {\n  const [isExpense, setIsExpense] = useState(false);\n  const [isListCategoriesOn, setIsListCategoriesOn] = useState(false);\n  const [isOption, setIsOption] = useState('Select a category');\n  const [isDate, setIsDate] = useState(today);\n  const [isAmount, setIsAmount] = useState('');\n  const [isDetails, setIsDetails] = useState('');\n  const [isColor, setIsColor] = useState('');\n\n  const monthPreLether = months.filter(\n    month => month.number === isDate.split('-')[1]\n  );\n  const monthLether = monthPreLether[0].name;\n  const defaultCard = {\n    id: nanoid(),\n    date: isDate,\n    year: isDate.split('-')[0],\n    month: monthLether,\n    type: isExpense,\n    category: isOption,\n    details: isDetails,\n    amount: isAmount,\n    color: isColor,\n  };\n\n const selectedCard = info.find(card => card.id === isIdForCardUpdate)\n console.log(\"selectedCard\",selectedCard)\n\n  useEffect(()=>{ if (selectedCard) {\n    \n    setIsExpense(selectedCard.type); \n    setIsOption(selectedCard.category);\n    setIsDate(selectedCard.date);\n    setIsAmount(selectedCard.amount);\n    setIsDetails(selectedCard.details);\n    setIsColor(selectedCard.color)\n  }},[selectedCard])\n\n\n\n  let arrCategory = isExpense ? mainExpenses : mainIncomes;\n  const buttonArrow = isListCategoriesOn ? <FaChevronUp /> : <FaAngleDown />;\n\n  const handleToggle = () => {\n    setIsExpense(prev => !prev);\n    setIsOption('Select a category');\n  };\n  const handleSelectedCategory = e => {\n    e.preventDefault();\n    setIsListCategoriesOn(prev => !prev);\n  };\n  const handleOption = input => {\n    setIsOption(input);\n    const identifyColor = allCategories.find(\n      category => category.type === input\n    );\n    setIsColor(identifyColor.color);\n    setIsListCategoriesOn(prev => !prev);\n  };\n\n  const submitNewCard = e => {\n    e.preventDefault();\n\n    const index = info.findIndex(card => card.id === isIdForCardUpdate);\n    if (isIdForCardUpdate) {\n      info.splice(index, 1,defaultCard);\n    }else{info.push(defaultCard);}\n\n    if (isOption === 'Select a category') {\n      alert('Please select a type of income or expense.');\n      return;\n    }\n\n    if (isAmount === '') {\n      alert('Please add a value higher than 0.00');\n      return;\n    }\n    if (Number(defaultCard.year) < 2020) {\n      alert('Please enter a date that starts with year 2020');\n      return;\n    }\n       \n    localStorage.setItem('listCards', JSON.stringify(info));\n    setIsExpense(false);\n    setIsListCategoriesOn(false);\n    setIsOption('Select a category');\n    setIsDate(today);\n    setIsAmount('');\n    setIsDetails('');\n    setIsColor('');\n    handleIdForCardUpdate(\"\")\n handleAddCardModal();\n  };\n\n  return (\n    <section className={style.newCardContainer}>\n      <h2>Add transaction</h2>\n\n      <form className={style.newCardForm} onSubmit={submitNewCard}>\n        <div className={style.newCardToggle}>\n          <span style={{ color: isExpense ? 'white' : 'rgb(194, 240, 126)' }}>\n            Income\n          </span>\n          <label className={style.switch}>\n            <input\n              type=\"checkbox\"\n              name=\"toggleNewCard\"\n              checked={isExpense}\n              onChange={handleToggle}\n              autoComplete=\"off\"\n            />\n            <span className={`${style.slider} ${style.round}`}></span>\n          </label>\n          <span style={{ color: isExpense ? 'rgb(211, 76, 76)' : 'white' }}>\n            Expense\n          </span>\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.categorySelection}`}>\n          <input\n            type=\"text\"\n            value={isOption}\n            readOnly\n            name=\"selectAcategory\"\n            style={{\n              color:\n                isOption === 'Select a category'\n                  ? 'rgba(206, 204, 204, 0.664)'\n                  : 'white',\n            }}\n            autoComplete=\"off\"\n          />\n          <button\n            onClick={handleSelectedCategory}\n            className={style.rowFormNewCardElem2}\n          >\n            {buttonArrow}\n          </button>\n        </div>\n\n        {isListCategoriesOn ? (\n          <ul className={style.newCardList}>\n            {arrCategory.map(category => (\n              <li\n                key={category.type}\n                value={category.type.toLowerCase()}\n                className={style.newCardOption}\n                onClick={() => handleOption(category.type)}\n              >\n                <input\n                  type=\"text\"\n                  name={category.type}\n                  value={category.type}\n                  readOnly\n                  autoComplete=\"off\"\n                  required\n                  className={\n                    !isExpense ? `${style.income}` : `${style.expense}`\n                  }\n                />\n              </li>\n            ))}\n          </ul>\n        ) : null}\n\n        <div\n          className={`${style.rowFormNewCard} ${style.amountAndDateSelection}`}\n        >\n          <input\n            className={style.amount}\n            type=\"text\"\n            name=\"amount\"\n            pattern=\"^\\d+(\\.\\d{1,2})?$\"\n            value={isAmount}\n            title=\"Enter an amount highet than 0, that has the followig format 5, 5.5 or 5.00\"\n            placeholder=\"0.00\"\n            required\n            autoComplete=\"off\"\n            onChange={e => setIsAmount(e.target.value)}\n          />\n          <input\n            type=\"date\"\n            name=\"dateNewCard\"\n            className={style.date}\n            onChange={e => setIsDate(e.target.value)}\n            autoComplete=\"off\"\n            value={isDate}\n          />\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.commentSelection}`}>\n          <input\n            type=\"text\"\n            name=\"comment\"\n            className={style.comment}\n            value={isDetails}\n            placeholder=\"-\"\n            autoComplete=\"off\"\n            onChange={e => setIsDetails(e.target.value)}\n          />\n        </div>\n\n        <div className={style.bigButtons}>\n          <BigBtnWithColorAll type=\"submit\" valueBtn=\"Add\" />\n\n          <BigBtnNoColorAll\n            valueBtn=\"Cancel\"\n            handleModal={handleAddCardModal}\n          />\n        </div>\n      </form>\n    </section>\n  );\n};\n\n/*\n\n\n*/\n\nexport default NewCardFormAll;\n\n/*\n\n\n          \n          */\n","\nimport style from '../moneyGuard.module.scss';\nimport { months, currentYear } from '../../helpers/timeInfo';\nimport ModalTime from '../ModalTime';\nimport { useEffect, useState } from 'react';\nimport DonutChart from 'components/DonutChart';\n\nconst StatisticsAll = ({ info }) => {\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n  const [selectedMonthAndYear, setSelectedMonthAndYear] = useState([]);\n\n  const handleMonth = value => setIsSelectedMonth(value);\n  const handleYear = value => setIsSelectedYear(value);\n\n  useEffect(() => {\n    const selectedYear = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const availableMonths = selectedYear.map(info => info.month);\n    const uniqueMonths = [...new Set(availableMonths)];\n    const filteredMonths = months.filter(month =>\n      uniqueMonths.includes(month.name)\n    );\n    filteredMonths.push({ number: '-', name: '-' });\n\n    setArrayMonthInSelectedYear(filteredMonths);\n  }, [isSelectedYear, info]);\n\n  useEffect(() => {\n    const arr = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const filteredArr =\n      isSelectedMonth !== '-'\n        ? arr.filter(info => info.month === isSelectedMonth)\n        : arr;\n\n    setSelectedMonthAndYear(filteredArr);\n  }, [info, isSelectedMonth, isSelectedYear]);\n\n  const expensesArr =\n    selectedMonthAndYear.filter(transaction => transaction.type) || [];\n  const expensesArrReducer = expensesArr.reduce((acc, item) => {\n    const { category, amount, color } = item;\n    const numericAmount = parseFloat(amount);\n    if (!acc[category]) {\n      acc[category] = {\n        total: 0,\n        color: color,\n      };\n    }\n    acc[category].total += numericAmount;\n    return acc;\n  }, {});\n\n  const cumulatedExpenes = Object.entries(expensesArrReducer)\n    .map(([category, data]) => ({\n      category,\n      total: data.total,\n      color: data.color,\n    }))\n    .sort((a, b) => b.total - a.total);\n\n  const infoReducer = selectedMonthAndYear.reduce(\n    (acc, item) => {\n      const category =\n        item.type === true\n          ? 'expenses'\n          : item.type === false\n          ? 'incomes'\n          : null;\n      if (!category) return acc;\n\n      const amount = parseFloat(item.amount);\n      acc[category] += amount;\n\n      return acc;\n    },\n    {\n      incomes: 0,\n      expenses: 0,\n    }\n  );\n\n  const filterYearsForSelection = info\n    .map(info => info.date.split('-')[0])\n    .filter((year, index, array) => array.indexOf(year) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n\n\n  return (\n\n      <div className={style.statistics}>\n        <h2>Statistics</h2>\n        <ModalTime\n          initialValue={isSelectedYear}\n          infoPeriod={filterYearsForSelection}\n          handleYear={handleYear}\n          handleMonth={handleMonth}\n          name=\"years\"\n        />\n\n        <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n        />\n\n        {infoReducer.expenses > 0 ? <div className={style.chartWrapper}>\n          <DonutChart info={cumulatedExpenes} />\n        </div> : null}\n\n        <div className={style.tableHeaderCategories}>\n          <span>Category</span>\n          <span>Sum</span>\n        </div>\n        {cumulatedExpenes.map(expense => {\n          return (\n            <div key={expense.category} className={style.tableRowsCategories}>\n              <div className={style.categoryWithColor}>\n                <span style={{ backgroundColor: `${expense.color}` }}></span>\n                <span>{expense.category}</span>\n              </div>\n              <span className={style.categoryAmount}>\n                {Number(expense.total).toFixed(2)}\n              </span>\n            </div>\n          );\n        })}\n\n        <div className={style.totalCategories}>\n          <div className={style.totalIncomes}>\n            <span>Incomes:</span>\n            <span>{Number(infoReducer.incomes).toFixed(2)}</span>\n          </div>\n\n          <div className={style.totalExpenses}>\n            <span>Expenses:</span>\n            <span>{Number(infoReducer.expenses).toFixed(2)}</span>\n          </div>\n        </div>\n      </div>\n\n  );\n};\n\nexport default StatisticsAll;\n\n/*\n\n\n\n        */\n","import style from '../moneyGuard.module.scss';\nimport currency from 'helpers/currencyBNR';\nimport { useState, useEffect } from 'react';\nimport Balance from 'components/Balance';\nimport CurrencyAll from './CurrencyAll';\nimport ListCardsAll from 'components/TabletMobileDesign/ListCardsAll';\nimport ModalTimeAll from 'components/TabletMobileDesign/ModalTimeAll';\nimport NavAll from 'components/TabletMobileDesign/NavAll';\nimport NewCoinFormAll from './NewCoinFormAll';\nimport NewCardFormAll from './NewCardFormAll';\nimport { currentYear, currentMonthLetter } from '../../helpers/timeInfo';\nimport StatisticsAll from './StatisticsAll';\n\nconst AllinOne = ({ info, handleDeleteCard }) => {\n  const currenciesLocalStorage = localStorage.getItem('moneyGuardCurrency');\n  const currenciesParces = JSON.parse(currenciesLocalStorage);\n  const [isHomeNavSelected, setIsHomeNavSelected] = useState(true);\n  const [isListCurrencies, setIsListCurrencies] = useState(\n    currenciesParces || currency\n  );\n  const [isNewCoinModalOn, setIsNewCoinModalOn] = useState(false);\n  const [isNewCardModalOn, setIsNewCardModalOn] = useState(false);\n  const [isIdForCoinUpdate, setIsIdForCoinUpdate] = useState('');\n  const [isIdForCardUpdate, setIsIdForCardUpdate] = useState('');\n  useEffect(() => {\n    localStorage.setItem(\n      'moneyGuardCurrency',\n      JSON.stringify(isListCurrencies)\n    );\n  }, [isListCurrencies]);\n\n  const handleAddNewCoin = value => {\n    if (!isIdForCoinUpdate) {\n      setIsListCurrencies(prev => [...prev, value]);\n    } else {\n      const findIndex = isListCurrencies.findIndex(\n        el => el.id === isIdForCoinUpdate\n      );\n      isListCurrencies.splice(findIndex, 1, value);\n      setIsListCurrencies(isListCurrencies);\n      setIsIdForCoinUpdate('');\n    }\n\n    setIsNewCoinModalOn(prev => !prev);\n  };\n\n  const [isYearMonthForFilter, setisYearMonthForFilter] = useState({\n    year: currentYear,\n    month: currentMonthLetter,\n  });\n  //\n\n  const handleYearMonth = value => setisYearMonthForFilter(value);\n  const handleNav = () => setIsHomeNavSelected(pre => !pre);\n  const handleAddCoinModal = () => setIsNewCoinModalOn(prev => !prev);\n  const handleIdForCoinUpdate = id => {\n    setIsIdForCoinUpdate(id);\n    handleAddCoinModal();\n  };\n  const handleIdForCardUpdate = id => setIsIdForCardUpdate(id);\n  const handleIdForCoinDel = id => {\n    const newListCurrency = isListCurrencies.filter(el => el.id !== id);\n    setIsListCurrencies(newListCurrency);\n    setIsIdForCoinUpdate('');\n  };\n  const handleAddCardModal = () => setIsNewCardModalOn(prev => !prev);\n\n  return (\n    <section className={style.allinOneWrapper}>\n      <div className={style.allinOneContainerLeft}>\n        <NavAll isHomeSelected={isHomeNavSelected} handleNav={handleNav} />\n\n        <div className={style.preBalance}>\n          <Balance info={info} />\n        </div>\n\n        <CurrencyAll\n          handleAddCoinModal={handleAddCoinModal}\n          listCurrencies={isListCurrencies}\n          handleIdForCoinUpdate={handleIdForCoinUpdate}\n          handleIdForCoinDel={handleIdForCoinDel}\n        />\n      </div>\n\n      <div className={style.allinOneContainerRight}>\n        {isHomeNavSelected ? (\n          <section className={style.homeSection}>\n            <ModalTimeAll info={info} handleYearMonth={handleYearMonth} />\n            <ListCardsAll\n              handleAddCardModal={handleAddCardModal}\n              handleDeleteCard={handleDeleteCard}\n              handleIdForCardUpdate={handleIdForCardUpdate}\n              info={info}\n              isYearMonthForFilter={isYearMonthForFilter}\n            />\n          </section>\n        ) : <section className={style.statisticsSection}>\n            <StatisticsAll info={info} />\n          </section>}\n      </div>\n\n      {isNewCoinModalOn ? (\n        <div className={style.newCoinFormAllModal}>\n          <NewCoinFormAll\n            handleAddNewCoin={handleAddNewCoin}\n            handleAddCoinModal={handleAddCoinModal}\n            isIdForCoinUpdate={isIdForCoinUpdate}\n            isListCurrencies={isListCurrencies}\n          />\n        </div>\n      ) : null}\n      {isNewCardModalOn ? (\n        <div className={style.newCardFormAllModal}>\n          <NewCardFormAll\n            handleIdForCardUpdate={handleIdForCardUpdate}\n            handleAddCardModal={handleAddCardModal}\n            info={info}\n            isIdForCardUpdate={isIdForCardUpdate}\n          />\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nexport default AllinOne;\n\n//      <NewCoinAll />\n","\n\nexport const mainExpenses = [{ type: \"Groceries\", color: \"#ADFF2F\" },{ type: \"House care\", color: \"yellow\" },{ type: \"Self care\", color: \"#F08080\" },{ type: \"Family Care\", color: \"#6495ED\" },{ type: \"Utilities\", color: \"#B8860B\" },{ type: \"Education\", color: \"#008B8B\" },{ type: \"Leisure\", color: \"#BDB76B\" },{ type: \"Other types\", color: \"#FF8C00\" }]\nexport const mainIncomes = [{ type: \"Salary\", color: \"#FF8C00\" }, { type: \"Project\", color: \"#FFF8DC\" }, { type: \"Gift\", color: \"#7FFF00\" }, { type: \"Donation\", color: \"#90EE90\" }, { type: \"Loan\", color: \"#FFB6C1\" }, { type: \"Other\", color: \"#ADD8E6\" }]\nexport const allCategories = mainExpenses.concat(mainIncomes)","const currency = [\n  { id:'111',\n    currencyName: 'EUR',\n    nbrRate: '5.0751',\n    buyRate: '4.9990',\n    sellRate: '5.1470',\n  },\n  { id:'222',\n    currencyName: 'USD',\n    nbrRate: '4.3838',\n    buyRate: '4.3020',\n    sellRate: '4.4600',\n  },\n  { id:'333',\n    currencyName: 'GBP',\n    nbrRate: '5.8533',\n    buyRate: '5.7680',\n    sellRate: '5.9580',\n  },\n];\n\nexport default currency;\n//new Intl.NumberFormat('fr-FR').format(Number(amount).toFixed(2))","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"newCoinFormButtons\":\"moneyGuard_newCoinFormButtons__Ld2LJ\",\"bigButton\":\"moneyGuard_bigButton__mbF3Z\",\"selectedBtn\":\"moneyGuard_selectedBtn__r-mtr\",\"notSelectedBtn\":\"moneyGuard_notSelectedBtn__-Hsty\",\"logWrapper\":\"moneyGuard_logWrapper__LSf9A\",\"regWrapper\":\"moneyGuard_regWrapper__YtLxi\",\"logoutWrapper\":\"moneyGuard_logoutWrapper__dNrg3\",\"loginContainer\":\"moneyGuard_loginContainer__zdqlN\",\"registerContainer\":\"moneyGuard_registerContainer__J4m2L\",\"logoWrapper\":\"moneyGuard_logoWrapper__ZabCu\",\"formLogReg\":\"moneyGuard_formLogReg__dlmBz\",\"formInput\":\"moneyGuard_formInput__zaLNk\",\"sharedLayoutWrapper\":\"moneyGuard_sharedLayoutWrapper__WypJz\",\"sharedLayoutHeader\":\"moneyGuard_sharedLayoutHeader__xecHh\",\"sharedLayoutUser\":\"moneyGuard_sharedLayoutUser__UL7Kx\",\"navLinks\":\"moneyGuard_navLinks__G2DUI\",\"selectedNav\":\"moneyGuard_selectedNav__PSmeh\",\"homePageWrapper\":\"moneyGuard_homePageWrapper__asSk6\",\"statisticsWrapper\":\"moneyGuard_statisticsWrapper__YyZV-\",\"currencyWrapper\":\"moneyGuard_currencyWrapper__T8iPT\",\"homePage\":\"moneyGuard_homePage__eJdWd\",\"listCards\":\"moneyGuard_listCards__VzXYi\",\"totalSum\":\"moneyGuard_totalSum__RjnxD\",\"statisticsPeriod\":\"moneyGuard_statisticsPeriod__KbPla\",\"headerPeriodOff\":\"moneyGuard_headerPeriodOff__Glj3Z\",\"headerPeriodOn\":\"moneyGuard_headerPeriodOn__utgKu\",\"listPeriod\":\"moneyGuard_listPeriod__t0xEJ\",\"cardwithColor\":\"moneyGuard_cardwithColor__EUcJl\",\"card\":\"moneyGuard_card__Ge4pl\",\"cardRow\":\"moneyGuard_cardRow__oFwuR\",\"cardRowValue\":\"moneyGuard_cardRowValue__6CcqP\",\"cardRowButtons\":\"moneyGuard_cardRowButtons__LsVBD\",\"addCardButton\":\"moneyGuard_addCardButton__StuE1\",\"logoutContainer\":\"moneyGuard_logoutContainer__JSNtD\",\"newCardWrapper\":\"moneyGuard_newCardWrapper__JI3ME\",\"newCoinWrapper\":\"moneyGuard_newCoinWrapper__eq4j4\",\"newCardContainer\":\"moneyGuard_newCardContainer__c8BXa\",\"newCardToggle\":\"moneyGuard_newCardToggle__DLsMb\",\"switch\":\"moneyGuard_switch__9UCPA\",\"slider\":\"moneyGuard_slider__yYkdM\",\"newCardForm\":\"moneyGuard_newCardForm__ZTfH+\",\"rowFormNewCard\":\"moneyGuard_rowFormNewCard__psgqW\",\"categorySelection\":\"moneyGuard_categorySelection__s-FD0\",\"newCardList\":\"moneyGuard_newCardList__wtIu8\",\"newCardOption\":\"moneyGuard_newCardOption__Mz+j9\",\"income\":\"moneyGuard_income__LwrhA\",\"expense\":\"moneyGuard_expense__tYS9B\",\"amountAndDateSelection\":\"moneyGuard_amountAndDateSelection__JJMgu\",\"amount\":\"moneyGuard_amount__jKQQ3\",\"date\":\"moneyGuard_date__q4+Am\",\"comment\":\"moneyGuard_comment__D+o-l\",\"newCardButtons\":\"moneyGuard_newCardButtons__OC+rK\",\"chartWrapper\":\"moneyGuard_chartWrapper__JMupN\",\"chart\":\"moneyGuard_chart__Q-JYc\",\"statistics\":\"moneyGuard_statistics__ukV59\",\"tableHeaderCategories\":\"moneyGuard_tableHeaderCategories__QYosi\",\"tableRowsCategories\":\"moneyGuard_tableRowsCategories__n0Imj\",\"categoryWithColor\":\"moneyGuard_categoryWithColor__ve7h0\",\"totalCategories\":\"moneyGuard_totalCategories__cA7C6\",\"totalExpenses\":\"moneyGuard_totalExpenses__JKPug\",\"totalIncomes\":\"moneyGuard_totalIncomes__jRt7F\",\"currencyContainer\":\"moneyGuard_currencyContainer__tUuJV\",\"currencyContainerHeader\":\"moneyGuard_currencyContainerHeader__bUVQE\",\"addCoinButton\":\"moneyGuard_addCoinButton__tOiSX\",\"currencyTable\":\"moneyGuard_currencyTable__jGu-G\",\"currencyTableHeader\":\"moneyGuard_currencyTableHeader__x2Inm\",\"currencyTableRow\":\"moneyGuard_currencyTableRow__Xacte\",\"currencyTableRate\":\"moneyGuard_currencyTableRate__5iVYk\",\"currencyTableNotRate\":\"moneyGuard_currencyTableNotRate__XuqjR\",\"currencyTableContent\":\"moneyGuard_currencyTableContent__r2UMv\",\"editCurrency\":\"moneyGuard_editCurrency__xRL+F\",\"deletCurrency\":\"moneyGuard_deletCurrency__JQYaZ\",\"newCoinContainer\":\"moneyGuard_newCoinContainer__+84h6\",\"newCoinForm\":\"moneyGuard_newCoinForm__b8dAL\",\"allinOneWrapper\":\"moneyGuard_allinOneWrapper__5tKyQ\",\"allinOneContainerLeft\":\"moneyGuard_allinOneContainerLeft__0hQOX\",\"selectedNavAll\":\"moneyGuard_selectedNavAll__ZUNgw\",\"notSelectedNavAll\":\"moneyGuard_notSelectedNavAll__5efLD\",\"preBalance\":\"moneyGuard_preBalance__oYN8J\",\"preCurrencyTableAll\":\"moneyGuard_preCurrencyTableAll__24I+Y\",\"currencyTableAll\":\"moneyGuard_currencyTableAll__8iXrk\",\"nonRate\":\"moneyGuard_nonRate__9zKFT\",\"withRate\":\"moneyGuard_withRate__J2h7I\",\"addButtonAll\":\"moneyGuard_addButtonAll__Lm82Q\",\"smallBtn\":\"moneyGuard_smallBtn__IT-vZ\",\"allinOneContainerRight\":\"moneyGuard_allinOneContainerRight__BsYJe\",\"homeSection\":\"moneyGuard_homeSection__gnFdl\",\"modalTimeSelect\":\"moneyGuard_modalTimeSelect__rPkuO\",\"listCardsTabletContainer\":\"moneyGuard_listCardsTabletContainer__FuYj2\",\"plusMinus\":\"moneyGuard_plusMinus__xswkY\",\"imPlus\":\"moneyGuard_imPlus__EV44y\",\"imMinus\":\"moneyGuard_imMinus__fHXmP\",\"newCoinFormAllModal\":\"moneyGuard_newCoinFormAllModal__b49ug\",\"newCoinFormAll\":\"moneyGuard_newCoinFormAll__-3gxX\",\"newCardFormAllModal\":\"moneyGuard_newCardFormAllModal__mXi17\",\"bigButtons\":\"moneyGuard_bigButtons__ykOi-\",\"addButtonSVG\":\"moneyGuard_addButtonSVG__8NJYe\",\"bigBtnWithColor\":\"moneyGuard_bigBtnWithColor__-XJMQ\",\"bigBtnNoColor\":\"moneyGuard_bigBtnNoColor__DlIYb\",\"form\":\"moneyGuard_form__dgiW8\"};"],"names":["_ref","balance","info","reduce","acc","data","type","Number","amount","_jsx","className","style","children","_jsxs","color","fontWeight","Intl","NumberFormat","format","toFixed","CustomTooltip","active","payload","length","_payload$0$payload","category","total","percentage","item","background","padding","borderRadius","border","concat","boxShadow","margin","fontSize","_ref2","totalSum","textAlign","width","position","PieChart","height","Pie","cx","cy","innerRadius","outerRadius","dataKey","nameKey","map","entry","index","Cell","fill","Tooltip","content","top","left","transform","paddingLeft","toLocaleString","minimumFractionDigits","infoPeriod","initialValue","name","handleMonth","handleYear","_useState","useState","_useState2","_slicedToArray","isModalOn","setisModalOn","modalRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","e","preventDefault","prev","FaChevronUp","FaAngleDown","value","nanoid","IoAddSharp","listCurrencies","handleAddCoinModal","handleIdForCoinUpdate","handleIdForCoinDel","AddButton","el","currencyName","nbrRate","buyRate","sellRate","id","MdDeleteOutline","MdOutlineModeEdit","isYearMonthForFilter","handleAddCardModal","handleDeleteCard","handleIdForCardUpdate","filteredInfoOnPeriod","filter","year","month","PiPlusMinusBold","card","date","ImPlus","ImMinus","details","handleYearMonth","currentYear","isSelectedYear","setIsSelectedYear","_useState3","currentMonthLetter","_useState4","isSelectedMonth","setIsSelectedMonth","_useState5","_useState6","isModalYearOn","setisModalYearOn","_useState7","_useState8","isModalMonthOn","setisModalMonthOn","modalRefYear","modalRefMonth","optionsYears","idx","arr","indexOf","optionsMonths","push","_objectSpread","isHomeSelected","handleNav","IoHomeSharp","ImStatsDots","valueBtn","handleModal","handleAddNewCoin","isIdForCoinUpdate","isListCurrencies","isCoin","setIsCoin","coinToBeUpdated","find","onSubmit","pattern","title","required","autoComplete","placeholder","onChange","toUpperCase","BigBtnWithColorAll","BigBtnNoColorAll","isIdForCardUpdate","isExpense","setIsExpense","isListCategoriesOn","setIsListCategoriesOn","isOption","setIsOption","today","isDate","setIsDate","_useState9","_useState10","isAmount","setIsAmount","_useState11","_useState12","isDetails","setIsDetails","_useState13","_useState14","isColor","setIsColor","monthLether","months","number","split","defaultCard","selectedCard","console","log","arrCategory","mainExpenses","mainIncomes","buttonArrow","findIndex","splice","alert","localStorage","setItem","JSON","stringify","checked","readOnly","toLowerCase","input","identifyColor","allCategories","handleOption","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","selectedMonthAndYear","setSelectedMonthAndYear","availableMonths","uniqueMonths","_toConsumableArray","Set","filteredMonths","includes","filteredArr","expensesArrReducer","transaction","numericAmount","parseFloat","cumulatedExpenes","Object","entries","_ref3","sort","a","b","infoReducer","incomes","expenses","filterYearsForSelection","array","localeCompare","ModalTime","DonutChart","expense","backgroundColor","currenciesLocalStorage","getItem","currenciesParces","parse","isHomeNavSelected","setIsHomeNavSelected","currency","setIsListCurrencies","isNewCoinModalOn","setIsNewCoinModalOn","isNewCardModalOn","setIsNewCardModalOn","setIsIdForCoinUpdate","setIsIdForCardUpdate","setisYearMonthForFilter","NavAll","pre","Balance","CurrencyAll","newListCurrency","ModalTimeAll","ListCardsAll","StatisticsAll","NewCoinFormAll","NewCardFormAll","todayNewDate","Date","getFullYear","currentMonth","getMonth","toString","padStart","currentDay","getDate"],"sourceRoot":""}