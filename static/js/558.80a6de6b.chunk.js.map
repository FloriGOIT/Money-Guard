{"version":3,"file":"static/js/558.80a6de6b.chunk.js","mappings":"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","sources":["helpers/categories.jsx","pages/NewCard.jsx","webpack://react-homework-template/./src/components/moneyGuard.module.scss?adfa"],"sourcesContent":["\n\nexport const mainExpenses = [\"Groceries \", \"Household Products\", \"Self care\",  \"Child Care\",  \"Utilities\", \"Education\", \"Leisure\", \"Other expenses\"]\nexport const mainIncome = [\"Salary\", \"Project\", \"Gift\", \"Donation\", \"Loan\", \"Other\"]","import style from '../components/moneyGuard.module.scss';\nimport {useEffect, useState } from 'react';\nimport { mainIncome, mainExpenses } from 'helpers/categories';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { Link,useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\nconst todayNewDate = new Date();\nconst year = todayNewDate.getFullYear();\nconst month = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst day = todayNewDate.getDate().toString().padStart(2, '0');\nconst today = `${year}-${month}-${day}`;\n\nconst NewCard = ({info}) => {\n  const [isExpense, setIsExpense] = useState(false);\n  const [isListCategoriesOn, setIsListCategoriesOn] = useState(false);\n  const [isOption, setIsOption] = useState('Select a category');\n  const [isDate, setIsDate] = useState(today);\n  const [isAmount, setIsAmount] = useState(\"\");\n  const [isDetails, setIsDetails] = useState(\"\");\n  const navigate = useNavigate();\n\n      const defaultCard = {\n      id: info.length + 1,\n      date: isDate,\n      type: isExpense,\n      category: isOption,\n      details: isDetails,\n      amount: isAmount}\n\n  const { id } = useParams();\n  \n  const selectedCard = info.find(card => Number(card.id) === Number(id));\n  useEffect(()=>{ if (selectedCard) {\n    \n    setIsExpense(selectedCard.type); \n    setIsOption(selectedCard.category);\n    setIsDate(selectedCard.date);\n    setIsAmount(selectedCard.amount);\n    setIsDetails(selectedCard.details);\n  }},[selectedCard])\n \n\n  let arrCategory = isExpense ? mainExpenses: mainIncome ;\n  const buttonArrow = isListCategoriesOn ? <FaChevronUp /> : <FaAngleDown />;\n\n  const handleToggle = () => {\n    setIsExpense(prev => !prev);\n    setIsOption('Select a category');\n  };\n  const handleSelectedCategory = e => {\n    e.preventDefault();\n    setIsListCategoriesOn(prev => !prev);\n  };\n  const handleOption = input => {\n    setIsOption(input);\n    setIsListCategoriesOn(prev => !prev);\n  };\n\n\n  const submitNewCard = (e) => {\n    e.preventDefault();\n\n\n    if (isOption === 'Select a category') {\n  alert(\"Please select a type of income or expense.\");\n  return;\n}\n\n    if ( isAmount === '') {\n  alert(\"Please add a value higher than 0.00\");\n  return;\n    }\n\n   \n    if(id){ info.splice(id - 1, 1);defaultCard.id = Number(id)};\ninfo.push(defaultCard)\n    localStorage.setItem(\"listCards\", JSON.stringify(info))\n    setIsExpense(false);\n    setIsListCategoriesOn(false);\n    setIsOption('Select a category');\n    setIsDate(today);\n    setIsAmount(\"\");\n    setIsDetails(\"\");\n\n  navigate(\"/\")\n \n    \n  };\n\n  return (\n    <section className={style.newCardWrapper}>\n      <div className={style.newCardContainer}>\n        <h2>Add transaction</h2>\n        \n        <form className={style.newCardForm} onSubmit={submitNewCard}>\n          <div className={style.newCardToggle}>\n            <span style={{ color: isExpense ? 'white' : 'rgb(194, 240, 126)' }}>\n              Income\n            </span>\n            <label className={style.switch}>\n              <input\n                type=\"checkbox\"\n                name=\"toggleNewCard\"\n                checked={isExpense}\n                onChange={handleToggle}\n                autoComplete=\"off\"\n              />\n              <span className={`${style.slider} ${style.round}`}></span>\n            </label>\n            <span style={{ color: isExpense ? 'rgb(211, 76, 76)' : 'white' }}>\n              Expense\n            </span>\n          </div>\n\n          <div className={`${style.rowFormNewCard} ${style.categorySelection}`}>\n            <input\n              type=\"text\"\n              value={isOption}\n              readOnly\n              name=\"selectAcategory\"\n              style={{ color: isOption === 'Select a category' ? \"rgba(206, 204, 204, 0.664)\" : \"white\" }}\n              autoComplete=\"off\"\n            />\n            <button\n              onClick={handleSelectedCategory}\n              className={style.rowFormNewCardElem2}\n            >\n              {buttonArrow}\n            </button>\n          </div>\n\n          {isListCategoriesOn ? (\n            <ul className={style.newCardList}>\n              {arrCategory.map(category => (\n                <li\n                  key={category}\n                  value={category.toLowerCase()}\n                  className={`${style.newCardOption} ${\n                    isExpense ? style.income : style.expense\n                  }`}\n                  onClick={() => handleOption(category)}\n                >\n                  <input\n                    type=\"text\"\n                    name=\"category\"\n                    value={category}\n                    readOnly\n                    autoComplete=\"off\"\n                    required\n                  />\n                </li>\n              ))}\n            </ul>\n          ) : null}\n\n          <div\n            className={`${style.rowFormNewCard} ${style.amountAndDateSelection}`}\n          >\n            <input\n              className={style.amount}\n              type=\"text\"\n              name=\"amount\"\n              pattern=\"^\\d+(\\.\\d{1,2})?$\"\n              value={isAmount}\n              title=\"Enter an amount highet than 0, that has the followig format 5, 5.5 or 5.00\"\n              placeholder=\"0.00\"\n              required\n              autoComplete=\"off\"\n              onChange={e=>setIsAmount(e.target.value)}\n            />\n            <input\n              type=\"date\"\n              name=\"dateNewCard\"\n              className={style.date}\n              value={isDate}\n              onChange={e => setIsDate(e.target.value)}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          <div className={`${style.rowFormNewCard} ${style.commentSelection}`}>\n            <input\n              type=\"text\"\n              name=\"comment\"\n              className={style.comment}\n              value={isDetails}\n              placeholder=\"-\"\n              autoComplete=\"off\"\n               onChange={e=>setIsDetails(e.target.value)}\n            />\n          </div>\n\n          <div className={style.newCardButtons}>\n\n              <button\n                type=\"submit\"\n                className={`${style.bigButton} ${style.selectedBtn}`}\n              >Add\n              </button>\n\n\n            <Link\n              to=\"/\"\n              className={`${style.bigButton} ${style.notSelectedBtn}`}\n            >\n              Cancel\n            </Link>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default NewCard;\n\n/*\n\n\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"logWrapper\":\"moneyGuard_logWrapper__LSf9A\",\"regWrapper\":\"moneyGuard_regWrapper__YtLxi\",\"logoutWrapper\":\"moneyGuard_logoutWrapper__dNrg3\",\"loginContainer\":\"moneyGuard_loginContainer__zdqlN\",\"registerContainer\":\"moneyGuard_registerContainer__J4m2L\",\"logoWrapper\":\"moneyGuard_logoWrapper__ZabCu\",\"formLogReg\":\"moneyGuard_formLogReg__dlmBz\",\"formInput\":\"moneyGuard_formInput__zaLNk\",\"bigButton\":\"moneyGuard_bigButton__mbF3Z\",\"selectedBtn\":\"moneyGuard_selectedBtn__r-mtr\",\"notSelectedBtn\":\"moneyGuard_notSelectedBtn__-Hsty\",\"sharedLayoutWrapper\":\"moneyGuard_sharedLayoutWrapper__WypJz\",\"sharedLayoutHeader\":\"moneyGuard_sharedLayoutHeader__xecHh\",\"sharedLayoutUser\":\"moneyGuard_sharedLayoutUser__UL7Kx\",\"navLinks\":\"moneyGuard_navLinks__G2DUI\",\"selectedNav\":\"moneyGuard_selectedNav__PSmeh\",\"homePageWrapper\":\"moneyGuard_homePageWrapper__asSk6\",\"homePage\":\"moneyGuard_homePage__eJdWd\",\"listCards\":\"moneyGuard_listCards__VzXYi\",\"totalSum\":\"moneyGuard_totalSum__RjnxD\",\"cardwithColor\":\"moneyGuard_cardwithColor__EUcJl\",\"card\":\"moneyGuard_card__Ge4pl\",\"cardRow\":\"moneyGuard_cardRow__oFwuR\",\"cardRowValue\":\"moneyGuard_cardRowValue__6CcqP\",\"cardRowButtons\":\"moneyGuard_cardRowButtons__LsVBD\",\"addCardButton\":\"moneyGuard_addCardButton__StuE1\",\"logoutContainer\":\"moneyGuard_logoutContainer__JSNtD\",\"newCardWrapper\":\"moneyGuard_newCardWrapper__JI3ME\",\"newCardContainer\":\"moneyGuard_newCardContainer__c8BXa\",\"newCardToggle\":\"moneyGuard_newCardToggle__DLsMb\",\"switch\":\"moneyGuard_switch__9UCPA\",\"slider\":\"moneyGuard_slider__yYkdM\",\"newCardForm\":\"moneyGuard_newCardForm__ZTfH+\",\"rowFormNewCard\":\"moneyGuard_rowFormNewCard__psgqW\",\"categorySelection\":\"moneyGuard_categorySelection__s-FD0\",\"newCardList\":\"moneyGuard_newCardList__wtIu8\",\"newCardOption\":\"moneyGuard_newCardOption__Mz+j9\",\"income\":\"moneyGuard_income__LwrhA\",\"expense\":\"moneyGuard_expense__tYS9B\",\"amountAndDateSelection\":\"moneyGuard_amountAndDateSelection__JJMgu\",\"amount\":\"moneyGuard_amount__jKQQ3\",\"date\":\"moneyGuard_date__q4+Am\",\"comment\":\"moneyGuard_comment__D+o-l\",\"newCardButtons\":\"moneyGuard_newCardButtons__OC+rK\",\"form\":\"moneyGuard_form__dgiW8\"};"],"names":["mainExpenses","mainIncome","todayNewDate","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","today","concat","_ref","info","_useState","useState","_useState2","_slicedToArray","isExpense","setIsExpense","_useState3","_useState4","isListCategoriesOn","setIsListCategoriesOn","_useState5","_useState6","isOption","setIsOption","_useState7","_useState8","isDate","setIsDate","_useState9","_useState10","isAmount","setIsAmount","_useState11","_useState12","isDetails","setIsDetails","navigate","useNavigate","defaultCard","id","length","date","type","category","details","amount","useParams","selectedCard","find","card","Number","useEffect","arrCategory","buttonArrow","_jsx","FaChevronUp","FaAngleDown","className","style","children","_jsxs","onSubmit","e","preventDefault","splice","push","localStorage","setItem","JSON","stringify","alert","color","name","checked","onChange","prev","autoComplete","value","readOnly","onClick","map","toLowerCase","required","pattern","title","placeholder","target","Link","to"],"sourceRoot":""}