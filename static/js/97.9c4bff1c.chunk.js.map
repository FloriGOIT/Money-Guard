{"version":3,"file":"static/js/97.9c4bff1c.chunk.js","mappings":"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","sources":["components/Balance.jsx","components/ModalTime.jsx","components/Nav.jsx","components/TabletMobileDesign/AddButton.jsx","helpers/timeInfo.jsx","components/Card.jsx","components/ListCardsMobile.jsx","pages/Home.jsx"],"sourcesContent":["import style from './moneyGuard.module.scss';\n\nconst Balance = ({ info }) => {\n  const balance = info.reduce((acc, data) => {\n    if (data.type === false) {\n      return acc + Number(data.amount);\n    } else if (data.type === true) {\n      return acc - Number(data.amount);\n    }\n    return acc;\n  }, 0);\n\n  return (\n    <div className={style.totalSum}>\n      <p> Balance: </p>\n      <p>\n        <span\n          style={{\n            color: balance <= 0 ? '#be242496' : 'rgb(194, 240, 126)',\n            fontWeight: 900,\n          }}\n        >\n          {' '}\n          {new Intl.NumberFormat('fr-FR').format(balance.toFixed(2))}\n        </span>\n        <span style={{marginLeft: \"10px\"}}>RON</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import style from './moneyGuard.module.scss';\nimport { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from \"react-icons/im\";\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n  const location = useLocation();\n  const pathName = location.pathname.split(\"/\")\n  const navLocation = pathName[1];\n  const linkNavLocation = `/${navLocation}`\n\n  return (\n    <nav className={style.navLinks}>\n      \n      <Link to=\"/\" className={linkNavLocation === \"/\"? `${style.selectedNav}`:null}>\n        <IoHomeSharp />\n      </Link>\n      <Link to=\"/statistics\" className={linkNavLocation === \"/statistics\"? `${style.selectedNav}`:null}>\n        <ImStatsDots />\n      </Link>\n      <Link to=\"/currency\" className={linkNavLocation === \"/currency\"? `${style.selectedNav}`:null}>\n        <BsCurrencyExchange />\n      </Link>\n    </nav>\n  );\n};\nexport default Nav\n","import style from \"../moneyGuard.module.scss\"\nimport { IoAddSharp } from 'react-icons/io5';\n\n\nconst AddButton = () => {\n        return (<button type=\"button\" className={style.addButtonAll} >\n                <IoAddSharp className={style.addButtonSVG}/>\n        </button>)\n}\n\nexport default AddButton","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","import styles from '../components/moneyGuard.module.scss';\nimport { Link } from 'react-router-dom';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\n\nconst Card = ({data,handleDeleteCard}) => {\n        const {id, date, type, category, details, amount } = data;\n  return (\n    <div className={styles.cardwithColor} style={{backgroundColor: type === false ? \"rgb(119, 235, 65)\": \"rgb(207, 47, 47)\" }}>\n      <div className={styles.card}>\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Date</span>\n          <span className={styles.cardRowValue}>{date}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Type</span>\n          <span className={styles.cardRowValue}>{type === false ?\"Income\":'Expense'}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Category</span>\n          <span className={styles.cardRowValue}>{category}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Details</span>\n          <span className={styles.cardRowValue} style={{color:'wheat', textAlign:\"end\", wordSpacing:\"0.3em\"}}>{details}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Sum</span>\n          <span className={styles.cardRowValue}>{amount}</span>\n        </div>\n\n        <div className={styles.cardRowButtons}>\n          <button type=\"button\" className={styles.selectedBtn} onClick={()=>handleDeleteCard(id)}>\n            <MdDeleteOutline/>\n          </button>\n          <Link to={`/newCard/${id}`}>\n            <button type=\"button\" className={styles.notSelectedBtn}>\n              <MdOutlineModeEdit />\n            </button>\n          </Link>\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import style from './moneyGuard.module.scss';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport ModalTime from './ModalTime';\nimport { useState,useEffect } from 'react';\nimport { months, currentYear } from 'helpers/timeInfo';\nimport Balance from './Balance';\nimport AddButton from './TabletMobileDesign/AddButton';\n\nconst ListCardsMobile = ({ info, handleDeleteCard }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n\n\n  const handleYear = value => setIsSelectedYear(value);\n  const filterYearsForSelection = info\n    .map(card => card.year)\n    .filter((el, index, arr) => arr.indexOf(el) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n  \nconst handleMonth = value => setIsSelectedMonth(value);\n  \n    useEffect(() => {\n      const selectedYear = info.filter(\n        info => Number(info.year) === Number(isSelectedYear)\n      );\n      const availableMonths = selectedYear.map(info => info.month);\n      const uniqueMonths = [...new Set(availableMonths)];\n      const filteredMonths = months.filter(month =>\n        uniqueMonths.includes(month.name)\n      );\n      filteredMonths.push({ number: '-', name: '-' });\n  \n      setArrayMonthInSelectedYear(filteredMonths);\n    }, [isSelectedYear, info]);\n\n  const arrDataByYear = info.filter(data => Number(data.year) === Number(isSelectedYear))\n  .sort((a, b) => new Date(b.date) - new Date(a.date));\n  const arrDataByYearAndMonth = arrDataByYear.filter(data => data.month === isSelectedMonth)\n  const arrDataToDisplay = isSelectedMonth === \"-\" ? arrDataByYear : arrDataByYearAndMonth\n\n\n  return (\n    <section className={style.listCards}>\n      <Balance info={info} />\n\n      <ModalTime\n        initialValue={isSelectedYear}\n        infoPeriod={filterYearsForSelection}\n        handleYear={handleYear}\n        handleMonth={handleMonth}\n        name=\"years\"\n      />\n\n      <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n      />\n\n      {arrDataToDisplay.map((data, index) => (\n        <Card\n          data={data}\n          key={index + 1}\n          handleDeleteCard={handleDeleteCard}\n          id={index + 1}\n        />\n      ))}\n      <Link to=\"/newCard\" className={style.addCardButton}>\n        <AddButton />\n      </Link>\n    </section>\n  );\n};\n\nexport default ListCardsMobile;\n\n//<button type='button' className={`${style.addCard} ${style.selectedBtn}`}><IoAddSharp/></button>\n","import style from '../components/moneyGuard.module.scss';\nimport ListCardsMobile from '../components/ListCardsMobile';\nimport Nav from 'components/Nav';\n\nconst Home = ({info,handleDeleteCard}) => {\n  return (\n    <section className={style.homePageWrapper}>\n      <div className={style.homePage}>\n        <Nav />\n        <ListCardsMobile info={info} handleDeleteCard={handleDeleteCard} />\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","balance","info","reduce","acc","data","type","Number","amount","_jsxs","className","style","children","_jsx","color","fontWeight","Intl","NumberFormat","format","toFixed","marginLeft","infoPeriod","initialValue","name","handleMonth","handleYear","_useState","useState","_useState2","_slicedToArray","isModalOn","setisModalOn","modalRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","concat","onClick","e","preventDefault","prev","FaChevronUp","FaAngleDown","map","item","value","nanoid","navLocation","useLocation","pathname","split","linkNavLocation","Link","to","IoHomeSharp","ImStatsDots","BsCurrencyExchange","IoAddSharp","months","number","todayNewDate","Date","currentYear","getFullYear","currentMonth","getMonth","toString","padStart","currentMonthLetter","filter","el","currentDay","getDate","today","handleDeleteCard","id","date","category","details","styles","backgroundColor","textAlign","wordSpacing","MdDeleteOutline","MdOutlineModeEdit","isSelectedYear","setIsSelectedYear","_useState3","_useState4","isSelectedMonth","setIsSelectedMonth","_useState5","_useState6","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","filterYearsForSelection","card","year","index","arr","indexOf","sort","a","b","localeCompare","availableMonths","month","uniqueMonths","_toConsumableArray","Set","filteredMonths","includes","push","arrDataByYear","arrDataByYearAndMonth","arrDataToDisplay","Balance","ModalTime","Card","AddButton","Nav","ListCardsMobile"],"sourceRoot":""}