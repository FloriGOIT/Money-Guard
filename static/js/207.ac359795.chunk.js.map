{"version":3,"file":"static/js/207.ac359795.chunk.js","mappings":"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","sources":["components/BigButtonsContainer.jsx","components/NewCoin.jsx","webpack://react-homework-template/./src/components/moneyGuard.module.scss?adfa","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import style from './moneyGuard.module.scss';\nimport { Link } from 'react-router-dom';\n\n\n\nconst BigButtonsContainer = ({ firstBtn, secondBtn, handleSubmit }) => {\n  const returnLocation = \"/currency\";\n  return (\n    <>\n      <button\n        className={`${style.bigButton} ${style.selectedBtn}`}\n      >\n      {firstBtn}  \n      </button>\n\n      <Link to={returnLocation} className={`${style.bigButton} ${style.notSelectedBtn}`}>\n        {secondBtn} \n      </Link>\n    </>\n  );\n};\n\nexport default BigButtonsContainer;\n","import style from './moneyGuard.module.scss';\nimport BigButtonsContainer from './BigButtonsContainer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\n\n\nconst NewCoin = ({origin}) => {\n  const [isCurrency, setIsCurrency] = useState({\n    id:nanoid(),\n    currencyName: '',\n    nbrRate: \"\",\n    buyRate: \"\",\n    sellRate: \"\",\n  });\n\n  const navigate = useNavigate();\n  const param = useParams().name;\n\n  useEffect(() => {\n\n     const localStorageArr = JSON.parse(localStorage.getItem(\"moneyGuardCurrency\"));\n    if (param) {\n      const newCurrency = localStorageArr.find(c => c.currencyName === param);\n      if (newCurrency) setIsCurrency(newCurrency);\n    }\n  }, [param]);\n\n  console.log(\"isCurrency\",isCurrency)\n\n  const handleSubmit = e => {\n\n    e.preventDefault();\n\n    const localStorageArr = JSON.parse(localStorage.getItem(\"moneyGuardCurrency\"));\n\n    if (!param){const checkDuplicateCurrency = localStorageArr.find(c => c.currencyName === isCurrency.currencyName);\n    if (checkDuplicateCurrency) {\n      alert(\"This currency is already available. Enter other name or cancel request.\"); return\n    }}\n\n    const index = localStorageArr.findIndex(c => c.id === isCurrency.id);\n    console.log(\"index\",index)\n    if (index !== -1) {\n      localStorageArr[index] = isCurrency;\n    } else {\n      localStorageArr.push(isCurrency); \n    };\n\n    localStorage.setItem(\"moneyGuardCurrency\", JSON.stringify(localStorageArr))\n\n    setIsCurrency({\n      id:nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n\n    navigate(origin);\n  };\n\n  return (\n    <section className={style.newCoinWrapper}>\n      <div className={style.newCoinContainer}>\n        <form className={style.newCoinForm} onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"currencyName\"\n            pattern=\"^[A-Za-z]{3}$\"\n            title=\"Enter exactly 3 letters.Example: USD, RON, EUR\"\n            value={isCurrency.currencyName}\n            required\n            autoComplete=\"off\"\n            placeholder=\"Currency name\"\n            onChange={e =>\n              setIsCurrency(prev => ({\n                ...prev,\n                currencyName: e.target.value.toUpperCase(),\n              }))\n            }\n          />\n          <input\n            type=\"text\"\n            name=\"nbrRate\"\n            pattern=\"^\\d+(\\.\\d{1,4})?$\"\n            title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n            value={isCurrency.nbrRate}\n            required\n            autoComplete=\"off\"\n            placeholder=\"Central bank rate\"\n            onChange={e =>\n              setIsCurrency(prev => ({ ...prev, nbrRate: e.target.value }))\n            }\n          />\n          <input\n            type=\"text\"\n            name=\"buyRate\"\n            pattern=\"^\\d+(\\.\\d{1,4})?$\"\n            title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n            value={isCurrency.buyRate}\n            required\n            autoComplete=\"off\"\n            placeholder=\"Buy rate\"\n            onChange={e =>\n              setIsCurrency(prev => ({ ...prev, buyRate: e.target.value }))\n            }\n          />\n          <input\n            type=\"text\"\n            name=\"sellRate\"\n            pattern=\"^\\d+(\\.\\d{1,4})?$\"\n            title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n            value={isCurrency.sellRate}\n            required\n            autoComplete=\"off\"\n            placeholder=\"Sell rate\"\n            onChange={e =>\n              setIsCurrency(prev => ({ ...prev, sellRate: e.target.value }))\n            }\n          />\n          <div className={style.newCoinFormButtons}>\n            <BigButtonsContainer firstBtn={param? \"Update\" : \"Add\"} secondBtn=\"Close\" />\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default NewCoin;\n\n/*\n    const checkDuplicateCurrency = currency.find(currency => currency.currencyName === isCurrency.currencyName);\n    if (checkDuplicateCurrency) {\n      alert(\"This currency is already available. Enter other name or cancel request.\"); return\n    }\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"newCoinFormButtons\":\"moneyGuard_newCoinFormButtons__Ld2LJ\",\"bigButton\":\"moneyGuard_bigButton__mbF3Z\",\"selectedBtn\":\"moneyGuard_selectedBtn__r-mtr\",\"notSelectedBtn\":\"moneyGuard_notSelectedBtn__-Hsty\",\"logWrapper\":\"moneyGuard_logWrapper__LSf9A\",\"regWrapper\":\"moneyGuard_regWrapper__YtLxi\",\"logoutWrapper\":\"moneyGuard_logoutWrapper__dNrg3\",\"loginContainer\":\"moneyGuard_loginContainer__zdqlN\",\"registerContainer\":\"moneyGuard_registerContainer__J4m2L\",\"logoWrapper\":\"moneyGuard_logoWrapper__ZabCu\",\"formLogReg\":\"moneyGuard_formLogReg__dlmBz\",\"formInput\":\"moneyGuard_formInput__zaLNk\",\"sharedLayoutWrapper\":\"moneyGuard_sharedLayoutWrapper__WypJz\",\"sharedLayoutHeader\":\"moneyGuard_sharedLayoutHeader__xecHh\",\"sharedLayoutUser\":\"moneyGuard_sharedLayoutUser__UL7Kx\",\"navLinks\":\"moneyGuard_navLinks__G2DUI\",\"selectedNav\":\"moneyGuard_selectedNav__PSmeh\",\"homePageWrapper\":\"moneyGuard_homePageWrapper__asSk6\",\"statisticsWrapper\":\"moneyGuard_statisticsWrapper__YyZV-\",\"currencyWrapper\":\"moneyGuard_currencyWrapper__T8iPT\",\"homePage\":\"moneyGuard_homePage__eJdWd\",\"listCards\":\"moneyGuard_listCards__VzXYi\",\"totalSum\":\"moneyGuard_totalSum__RjnxD\",\"statisticsPeriod\":\"moneyGuard_statisticsPeriod__KbPla\",\"headerPeriodOff\":\"moneyGuard_headerPeriodOff__Glj3Z\",\"headerPeriodOn\":\"moneyGuard_headerPeriodOn__utgKu\",\"listPeriod\":\"moneyGuard_listPeriod__t0xEJ\",\"cardwithColor\":\"moneyGuard_cardwithColor__EUcJl\",\"card\":\"moneyGuard_card__Ge4pl\",\"cardRow\":\"moneyGuard_cardRow__oFwuR\",\"cardRowValue\":\"moneyGuard_cardRowValue__6CcqP\",\"cardRowButtons\":\"moneyGuard_cardRowButtons__LsVBD\",\"addCardButton\":\"moneyGuard_addCardButton__StuE1\",\"logoutContainer\":\"moneyGuard_logoutContainer__JSNtD\",\"newCardWrapper\":\"moneyGuard_newCardWrapper__JI3ME\",\"newCoinWrapper\":\"moneyGuard_newCoinWrapper__eq4j4\",\"newCardContainer\":\"moneyGuard_newCardContainer__c8BXa\",\"newCardToggle\":\"moneyGuard_newCardToggle__DLsMb\",\"switch\":\"moneyGuard_switch__9UCPA\",\"slider\":\"moneyGuard_slider__yYkdM\",\"newCardForm\":\"moneyGuard_newCardForm__ZTfH+\",\"rowFormNewCard\":\"moneyGuard_rowFormNewCard__psgqW\",\"categorySelection\":\"moneyGuard_categorySelection__s-FD0\",\"newCardList\":\"moneyGuard_newCardList__wtIu8\",\"newCardOption\":\"moneyGuard_newCardOption__Mz+j9\",\"income\":\"moneyGuard_income__LwrhA\",\"expense\":\"moneyGuard_expense__tYS9B\",\"amountAndDateSelection\":\"moneyGuard_amountAndDateSelection__JJMgu\",\"amount\":\"moneyGuard_amount__jKQQ3\",\"date\":\"moneyGuard_date__q4+Am\",\"comment\":\"moneyGuard_comment__D+o-l\",\"newCardButtons\":\"moneyGuard_newCardButtons__OC+rK\",\"chartWrapper\":\"moneyGuard_chartWrapper__JMupN\",\"chart\":\"moneyGuard_chart__Q-JYc\",\"statistics\":\"moneyGuard_statistics__ukV59\",\"tableHeaderCategories\":\"moneyGuard_tableHeaderCategories__QYosi\",\"tableRowsCategories\":\"moneyGuard_tableRowsCategories__n0Imj\",\"categoryWithColor\":\"moneyGuard_categoryWithColor__ve7h0\",\"totalCategories\":\"moneyGuard_totalCategories__cA7C6\",\"totalExpenses\":\"moneyGuard_totalExpenses__JKPug\",\"totalIncomes\":\"moneyGuard_totalIncomes__jRt7F\",\"currencyContainer\":\"moneyGuard_currencyContainer__tUuJV\",\"currencyContainerHeader\":\"moneyGuard_currencyContainerHeader__bUVQE\",\"addCoinButton\":\"moneyGuard_addCoinButton__tOiSX\",\"currencyTable\":\"moneyGuard_currencyTable__jGu-G\",\"currencyTableHeader\":\"moneyGuard_currencyTableHeader__x2Inm\",\"currencyTableRow\":\"moneyGuard_currencyTableRow__Xacte\",\"currencyTableRate\":\"moneyGuard_currencyTableRate__5iVYk\",\"currencyTableNotRate\":\"moneyGuard_currencyTableNotRate__XuqjR\",\"currencyTableContent\":\"moneyGuard_currencyTableContent__r2UMv\",\"editCurrency\":\"moneyGuard_editCurrency__xRL+F\",\"deletCurrency\":\"moneyGuard_deletCurrency__JQYaZ\",\"newCoinContainer\":\"moneyGuard_newCoinContainer__+84h6\",\"newCoinForm\":\"moneyGuard_newCoinForm__b8dAL\",\"allinOneWrapper\":\"moneyGuard_allinOneWrapper__5tKyQ\",\"allinOneContainerPermanent\":\"moneyGuard_allinOneContainerPermanent__7dlcC\",\"selectedNavAll\":\"moneyGuard_selectedNavAll__ZUNgw\",\"notSelectedNavAll\":\"moneyGuard_notSelectedNavAll__5efLD\",\"currencyTableAll\":\"moneyGuard_currencyTableAll__8iXrk\",\"nonRate\":\"moneyGuard_nonRate__9zKFT\",\"withRate\":\"moneyGuard_withRate__J2h7I\",\"smallBtn\":\"moneyGuard_smallBtn__IT-vZ\",\"allinOneContainerRight\":\"moneyGuard_allinOneContainerRight__BsYJe\",\"modalTimeSelect\":\"moneyGuard_modalTimeSelect__rPkuO\",\"listCardsTabletContainer\":\"moneyGuard_listCardsTabletContainer__FuYj2\",\"plusMinus\":\"moneyGuard_plusMinus__xswkY\",\"imPlus\":\"moneyGuard_imPlus__EV44y\",\"imMinus\":\"moneyGuard_imMinus__fHXmP\",\"newCoinAllFormContainer\":\"moneyGuard_newCoinAllFormContainer__lPPpf\",\"newCoinAllForm\":\"moneyGuard_newCoinAllForm__9MUxv\",\"addButtonAll\":\"moneyGuard_addButtonAll__Lm82Q\",\"addButtonSVG\":\"moneyGuard_addButtonSVG__8NJYe\",\"bigButtons\":\"moneyGuard_bigButtons__ykOi-\",\"bigBtnWithColor\":\"moneyGuard_bigBtnWithColor__-XJMQ\",\"bigBtnNoColor\":\"moneyGuard_bigBtnNoColor__DlIYb\",\"form\":\"moneyGuard_form__dgiW8\"};","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","/* @ts-self-types=\"./index.d.ts\" */\nimport { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["_ref","firstBtn","secondBtn","handleSubmit","_jsxs","_Fragment","children","_jsx","className","concat","style","Link","to","origin","_useState","useState","id","nanoid","currencyName","nbrRate","buyRate","sellRate","_useState2","_slicedToArray","isCurrency","setIsCurrency","navigate","useNavigate","param","useParams","name","useEffect","localStorageArr","JSON","parse","localStorage","getItem","newCurrency","find","c","console","log","onSubmit","e","preventDefault","alert","index","findIndex","push","setItem","stringify","type","pattern","title","value","required","autoComplete","placeholder","onChange","prev","_objectSpread","target","toUpperCase","BigButtonsContainer","urlAlphabet","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet"],"sourceRoot":""}