{"version":3,"file":"static/js/822.bcb3efcd.chunk.js","mappings":"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","sources":["components/Balance.jsx","components/DonutChart.jsx","components/Header.jsx","components/Logo.jsx","components/ModalTime.jsx","components/TabletMobileDesign/AddButton.jsx","components/TabletMobileDesign/CurrencyAll.jsx","components/TabletMobileDesign/ListCardsAll.jsx","components/TabletMobileDesign/ModalTimeAll.jsx","components/TabletMobileDesign/NavAll.jsx","components/TabletMobileDesign/BigBtnWithColorAll.jsx","components/TabletMobileDesign/BigBtnNoColorAll.jsx","components/TabletMobileDesign/NewCoinFormAll.jsx","components/TabletMobileDesign/NewCardFormAll.jsx","components/TabletMobileDesign/StatisticsAll.jsx","components/TabletMobileDesign/AllinOne.jsx","helpers/categories.jsx","helpers/currencyBNR.jsx","helpers/timeInfo.jsx"],"sourcesContent":["import style from './moneyGuard.module.scss';\n\nconst Balance = ({ info }) => {\n  const balance = info.reduce((acc, data) => {\n    if (data.type === false) {\n      return acc + Number(data.amount);\n    } else if (data.type === true) {\n      return acc - Number(data.amount);\n    }\n    return acc;\n  }, 0);\n\n  return (\n    <div className={style.totalSum}>\n      <p> Balance: </p>\n      <p>\n        <span\n          style={{\n            color: balance <= 0 ? '#be242496' : 'rgb(194, 240, 126)',\n            fontWeight: 900,\n          }}\n        >\n          {' '}\n          {new Intl.NumberFormat('fr-FR').format(balance.toFixed(2))}\n        </span>\n        <span style={{marginLeft: \"10px\"}}>RON</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n","import { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport style from './moneyGuard.module.scss';\n\nconst CustomTooltip = ({ active, payload, info }) => {\n  if (active && payload && payload.length) {\n    const { category, total, color } = payload[0].payload;\n    const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n    const percentage = ((total / totalSum) * 100).toFixed(1);\n\n    return (\n      <div\n        style={{\n          background: '#1f1f1f',\n          padding: '8px 8px',\n          borderRadius: '10px',\n          color: '#fff',\n          border: `2px solid ${color}`,\n          boxShadow: '0 0 5px rgba(0,0,0,0.3)',\n        }}\n      >\n        <p style={{ margin: 0, fontWeight: 'bold', fontSize: '14px' }}>\n          {category}\n        </p>\n        <p style={{ margin: 0, fontSize: '14px' }}>{percentage}%</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst DonutChart = ({ info }) => {\n  const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n\n  return (\n    <div\n      style={{ textAlign: 'center', width: '300px', margin: '0 auto', position:\"static\" }}\n      className={style.chart}\n    >\n\n      <div style={{ margin: '0 auto', position:\"relative\" }}>\n        <PieChart width={285} height={285} style={{ margin: '0 auto' }}>\n          <Pie\n            data={info}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={140}\n            dataKey=\"total\"\n            nameKey=\"category\"\n          >\n            {info.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n          <Tooltip content={<CustomTooltip />} info={info} />\n        </PieChart>\n\n        {/* Center text */}\n        <div\n          style={{\n            position: 'absolute',\n            top: '120px',\n            left: '50%',\n            transform: 'translateX(-52%)',\n            fontWeight: '900',\n            fontSize: '30px',\n            color: 'rgb(165,25,25)',\n            paddingLeft:\"10px\"\n          }}\n        >\n          {new Intl.NumberFormat('fr-FR').format(totalSum.toFixed(2))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n","\nimport Logo from './Logo';\nimport style from './moneyGuard.module.scss';\nimport { RiLogoutCircleRLine } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({handleLogOutModal}) => {\n  return (\n      <header className={style.sharedLayoutHeader}>\n        <Logo />\n        <div className={style.sharedLayoutUser}>\n          <p>Florentina</p>\n          <Link to=\"/logout\" title=\"Log Out\">\n            <RiLogoutCircleRLine />\n          </Link>\n        </div>\n      </header>\n\n  );\n};\nexport default Header;","import logo from '../helpers/images/logo.png';\nimport style from '../components/moneyGuard.module.scss';\n\nconst Logo = () => {\n  return (\n    <div className={style.logoWrapper}>\n      <img src={logo} alt=\"money-guard-logo\" />\n      <span>Money Guard</span>\n    </div>\n  );\n};\nexport default Logo;\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import style from \"../moneyGuard.module.scss\"\nimport { IoAddSharp } from 'react-icons/io5';\n\n\nconst AddButton = () => {\n        return (<button type=\"button\" className={style.addButtonAll} >\n                <IoAddSharp className={style.addButtonSVG}/>\n        </button>)\n}\n\nexport default AddButton","import style from '../moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport AddButton from './AddButton';\n\nconst CurrencyAll = ({\n  listCurrencies,\n  handleAddCoinModal,\n  handleIdForCoinUpdate,\n  handleIdForCoinDel,\n}) => {\n  return (\n    <div className={style.preCurrencyTableAll}>\n      <table className={style.currencyTableAll}>\n        <thead>\n          <tr>\n            <th className={style.nonRate}></th>\n            <th className={style.withRate}>NBR</th>\n            <th className={style.withRate}>Buy</th>\n            <th className={style.withRate}>Sell</th>\n            <th onClick={handleAddCoinModal}>\n              <AddButton />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCurrencies.map(el => (\n            <tr key={el.id}>\n              <td className={style.nonRate}>{el.currencyName}</td>\n              <td className={style.withRate}>\n                {Number(el.nbrRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.buyRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.sellRate).toFixed(4)}\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '5px' }}\n                onClick={() => handleIdForCoinDel(el.id)}\n              >\n                <div className={style.deletCurrency}>\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '10px' }}\n                onClick={() => handleIdForCoinUpdate(el.id)}\n              >\n                <div className={style.editCurrency}>\n                  <MdOutlineModeEdit />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CurrencyAll;\n","import style from '../../components/moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { ImMinus } from 'react-icons/im';\nimport { PiPlusMinusBold } from 'react-icons/pi';\nimport { ImPlus } from 'react-icons/im';\nimport AddButton from './AddButton';\n\n\nconst ListCardsAll = ({ info, isYearMonthForFilter,handleAddCardModal,handleDeleteCard,handleIdForCardUpdate }) => {\n  \n  const filteredInfoOnPeriod = info.filter(el => Number(el.year) === Number(isYearMonthForFilter.year))\n                                   .filter(el => {if(isYearMonthForFilter.month === \"-\"){ return el }\n                                   else { return el.month === isYearMonthForFilter.month }\n                                   })\n  const handleAddNewCard = () => { handleAddCardModal(); handleIdForCardUpdate(\"\") }\n  \n  return (\n    <div className={style.listCardsTabletContainer}>\n      <table>\n        <thead>\n          <tr>\n            <th  style={{width: \"100px\"}}>Date</th>\n            <th className={style.piPlusMinusBold}>\n              <PiPlusMinusBold className={style.plusMinus} />\n            </th>\n            <th style={{width: \"100px\"}}>Category</th>\n            <th >Comment</th>\n            <th style={{width: \"80px\"}}>Sum</th>\n            <th onClick={handleAddNewCard}><AddButton /></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredInfoOnPeriod.map(card => (\n            <tr key={card.id} >\n              <td className={style.cardDate} style={{width: \"100px\"}}>{card.date}</td>\n              <td className={style.cardType}>\n                {card.type ? <ImPlus className={style.imPlus}/> : <ImMinus className={style.imMinus}/>}\n              </td>\n              <td className={style.cardCategory} style={{width: \"100px\"}}>{card.category}</td>\n              <td className={style.cardDetails} >{card.details}</td>\n              <td className={style.cardAmount} style={{width: \"80px\"}}>{new Intl.NumberFormat('fr-FR').format(Number(card.amount).toFixed(2))}</td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() =>handleDeleteCard(card.id)}>\n                <div className={style.deletCurrency} >\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() => { handleIdForCardUpdate(card.id);; handleAddCardModal()}}>\n                <div className={style.editCurrency} >\n                  <MdOutlineModeEdit/>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListCardsAll;\n\n/* \n\n          <tr>\n            <th  style={{width: \"100px\"}}>Date</th>\n            <th className={style.piPlusMinusBold}>\n              <PiPlusMinusBold className={style.plusMinus} />\n            </th>\n            <th style={{width: \"100px\"}}>Category</th>\n            <th style={{width: \"340px\"}}>Comment</th>\n            <th style={{width: \"80px\"}}>Sum</th>\n            <th onClick={handleAddNewCard}><AddButton /></th>\n            <th></th>\n          </tr>\n\n*/\n","import style from '../../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { currentYear, currentMonthLetter } from 'helpers/timeInfo';\n\nconst ModalTimeAll = ({ info, handleYearMonth }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState(currentMonthLetter);\n  const [isModalYearOn, setisModalYearOn] = useState(false);\n  const [isModalMonthOn, setisModalMonthOn] = useState(false);\n\n  const modalRefYear = useRef(null);\n  const modalRefMonth = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        modalRefYear.current &&\n        !modalRefYear.current.contains(event.target)\n      ) {\n        setisModalYearOn(false);\n      }\n\n      if (\n        modalRefMonth.current &&\n        !modalRefMonth.current.contains(event.target)\n      ) {\n        setisModalMonthOn(false);\n      }\n    };\n\n    if (isModalYearOn || isModalMonthOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalYearOn, isModalMonthOn]);\n\n  const optionsYears = info\n    .map(el => el.year)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n\n  const optionsMonths = info\n    .filter(el => Number(el.year) === Number(isSelectedYear))\n    .map(el => el.month)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n  optionsMonths.push(\"-\");\n  const handleOptionYear = value => {\n    setisModalYearOn(false);\n    setIsSelectedMonth(\"-\");\n    handleYearMonth(prev => ({ ...prev, year: value, month:\"-\" }));\n    setIsSelectedYear(value);\n  };\n\n  const handleOptionMonth = value => {\n    setisModalMonthOn(false);\n    setIsSelectedMonth(value);\n    handleYearMonth(prev => ({ ...prev, month: value }));\n  };\n\n  return (\n    <div className={style.modalTimeSelect} ref={modalRefYear}>\n      <div className={style.years}>\n        <div\n          className={\n            isModalYearOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedYear}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalYearOn(prev => !prev);\n            }}\n          >\n            {isModalYearOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalYearOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsYears.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionYear(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className={style.months} ref={modalRefMonth}>\n        <div\n          className={\n            isModalMonthOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedMonth}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalMonthOn(prev => !prev);\n            }}\n          >\n            {isModalMonthOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalMonthOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsMonths.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionMonth(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModalTimeAll;\n","import { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from 'react-icons/im';\nimport style from \"../../components/moneyGuard.module.scss\"\n\nconst NavAll = ({ isHomeSelected, handleNav }) => {\n  return (\n    <nav>\n      <div\n        onClick={isHomeSelected ? null : handleNav}\n        className={\n          isHomeSelected\n            ? `${style.selectedNavAll}`\n            : `${style.notSelectedNavAll}`\n        }\n      >\n        <IoHomeSharp />\n        <span>Home</span>\n      </div>\n\n      <div\n        onClick={isHomeSelected ? handleNav : null}\n        className={\n          isHomeSelected\n            ? `${style.notSelectedNavAll}`\n            : `${style.selectedNavAll}`\n        }\n      >\n        <ImStatsDots />\n        <span>Statistics</span>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavAll\n","import style from \"../moneyGuard.module.scss\"\n\nconst BigBtnWithColorAll = ({valueBtn,type}) => {\n        return <button type={type} className={style.bigBtnWithColor} >{valueBtn}</button>\n}\n\nexport default BigBtnWithColorAll","import style from \"../moneyGuard.module.scss\"\n\n\nconst BigBtnNoColorAll = ({valueBtn, handleModal}) => {\n        return <button className={style.bigBtnNoColor} onClick={handleModal}>{valueBtn}</button>\n}\n\nexport default BigBtnNoColorAll","import style from '../moneyGuard.module.scss';\nimport { useState,useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCoinFormAll = ({\n  handleAddNewCoin,\n  handleAddCoinModal,\n  isIdForCoinUpdate,\n  isListCurrencies,\n}) => {\n\n  const [isCoin, setIsCoin] = useState({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n\n\n\n  useEffect(() => {\n      const coinToBeUpdated = isListCurrencies.find(\n    el => el.id === isIdForCoinUpdate\n    );\n    \n    if (isIdForCoinUpdate) {\n    setIsCoin(coinToBeUpdated);\n  } },[isIdForCoinUpdate, isListCurrencies])\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkDuplicate = isListCurrencies.find(el => el.currencyName === isCoin.currencyName);\n    console.log(\"checkDuplicate\", checkDuplicate)\n    if (checkDuplicate) { alert(\"This currency is already available. Enter other name or cancel request.\") }\n    else{handleAddNewCoin(isCoin);}\n    \n  };\n  const handleCancel = e => {\n    e.preventDefault();\n    setIsCoin({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n    handleAddCoinModal();\n  }\n  return (\n    <form className={style.newCoinFormAll} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"currencyName\"\n        pattern=\"^[A-Za-z]{3}$\"\n        title=\"Enter exactly 3 letters.Example: USD, RON, EUR\"\n        value={isCoin.currencyName}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Currency name\"\n        onChange={e =>\n          setIsCoin(prev => ({\n            ...prev,\n            currencyName: e.target.value.toUpperCase(),\n          }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"nbrRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.nbrRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Central bank rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, nbrRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"buyRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.buyRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Buy rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, buyRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"sellRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.sellRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Sell rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, sellRate: e.target.value }))\n        }\n      />\n      <div className={style.bigButtons}>\n        <BigBtnWithColorAll valueBtn=\"Save\" type=\"submit\" />\n        <BigBtnNoColorAll\n          valueBtn=\"Close\"\n          handleModal={handleCancel}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default NewCoinFormAll;\n","import style from '../moneyGuard.module.scss';\nimport { useEffect, useState } from 'react';\nimport {\n  mainIncomes,\n  mainExpenses,\n  allCategories,\n} from '../../helpers/categories';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { today, months } from '../../helpers/timeInfo';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCardFormAll = ({ info, handleAddCardModal, isIdForCardUpdate, handleIdForCardUpdate }) => {\n  const [isExpense, setIsExpense] = useState(false);\n  const [isListCategoriesOn, setIsListCategoriesOn] = useState(false);\n  const [isOption, setIsOption] = useState('Select a category');\n  const [isDate, setIsDate] = useState(today);\n  const [isAmount, setIsAmount] = useState('');\n  const [isDetails, setIsDetails] = useState('');\n  const [isColor, setIsColor] = useState('');\n\n  const monthPreLether = months.filter(\n    month => month.number === isDate.split('-')[1]\n  );\n  const monthLether = monthPreLether[0].name;\n  const defaultCard = {\n    id: nanoid(),\n    date: isDate,\n    year: isDate.split('-')[0],\n    month: monthLether,\n    type: isExpense,\n    category: isOption,\n    details: isDetails,\n    amount: isAmount,\n    color: isColor,\n  };\n\n const selectedCard = info.find(card => card.id === isIdForCardUpdate)\n console.log(\"selectedCard\",selectedCard)\n\n  useEffect(()=>{ if (selectedCard) {\n    \n    setIsExpense(selectedCard.type); \n    setIsOption(selectedCard.category);\n    setIsDate(selectedCard.date);\n    setIsAmount(selectedCard.amount);\n    setIsDetails(selectedCard.details);\n    setIsColor(selectedCard.color)\n  }},[selectedCard])\n\n\n\n  let arrCategory = isExpense ? mainExpenses : mainIncomes;\n  const buttonArrow = isListCategoriesOn ? <FaChevronUp /> : <FaAngleDown />;\n\n  const handleToggle = () => {\n    setIsExpense(prev => !prev);\n    setIsOption('Select a category');\n  };\n  const handleSelectedCategory = e => {\n    e.preventDefault();\n    setIsListCategoriesOn(prev => !prev);\n  };\n  const handleOption = input => {\n    setIsOption(input);\n    const identifyColor = allCategories.find(\n      category => category.type === input\n    );\n    setIsColor(identifyColor.color);\n    setIsListCategoriesOn(prev => !prev);\n  };\n\n  const submitNewCard = e => {\n    e.preventDefault();\n\n    const index = info.findIndex(card => card.id === isIdForCardUpdate);\n    if (isIdForCardUpdate) {\n      info.splice(index, 1,defaultCard);\n    }else{info.push(defaultCard);}\n\n    if (isOption === 'Select a category') {\n      alert('Please select a type of income or expense.');\n      return;\n    }\n\n    if (isAmount === '') {\n      alert('Please add a value higher than 0.00');\n      return;\n    }\n    if (Number(defaultCard.year) < 2020) {\n      alert('Please enter a date that starts with year 2020');\n      return;\n    }\n       \n    localStorage.setItem('listCards', JSON.stringify(info));\n    setIsExpense(false);\n    setIsListCategoriesOn(false);\n    setIsOption('Select a category');\n    setIsDate(today);\n    setIsAmount('');\n    setIsDetails('');\n    setIsColor('');\n    handleIdForCardUpdate(\"\")\n handleAddCardModal();\n  };\n\n  return (\n    <section className={style.newCardContainer}>\n      <h2>Add transaction</h2>\n\n      <form className={style.newCardForm} onSubmit={submitNewCard}>\n        <div className={style.newCardToggle}>\n          <span style={{ color: isExpense ? 'white' : 'rgb(194, 240, 126)' }}>\n            Income\n          </span>\n          <label className={style.switch}>\n            <input\n              type=\"checkbox\"\n              name=\"toggleNewCard\"\n              checked={isExpense}\n              onChange={handleToggle}\n              autoComplete=\"off\"\n            />\n            <span className={`${style.slider} ${style.round}`}></span>\n          </label>\n          <span style={{ color: isExpense ? 'rgb(211, 76, 76)' : 'white' }}>\n            Expense\n          </span>\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.categorySelection}`}>\n          <input\n            type=\"text\"\n            value={isOption}\n            readOnly\n            name=\"selectAcategory\"\n            style={{\n              color:\n                isOption === 'Select a category'\n                  ? 'rgba(206, 204, 204, 0.664)'\n                  : 'white',\n            }}\n            autoComplete=\"off\"\n          />\n          <button\n            onClick={handleSelectedCategory}\n            className={style.rowFormNewCardElem2}\n          >\n            {buttonArrow}\n          </button>\n        </div>\n\n        {isListCategoriesOn ? (\n          <ul className={style.newCardList}>\n            {arrCategory.map(category => (\n              <li\n                key={category.type}\n                value={category.type.toLowerCase()}\n                className={style.newCardOption}\n                onClick={() => handleOption(category.type)}\n              >\n                <input\n                  type=\"text\"\n                  name={category.type}\n                  value={category.type}\n                  readOnly\n                  autoComplete=\"off\"\n                  required\n                  className={\n                    !isExpense ? `${style.income}` : `${style.expense}`\n                  }\n                />\n              </li>\n            ))}\n          </ul>\n        ) : null}\n\n        <div\n          className={`${style.rowFormNewCard} ${style.amountAndDateSelection}`}\n        >\n          <input\n            className={style.amount}\n            type=\"text\"\n            name=\"amount\"\n            pattern=\"^\\d+(\\.\\d{1,2})?$\"\n            value={isAmount}\n            title=\"Enter an amount highet than 0, that has the followig format 5, 5.5 or 5.00\"\n            placeholder=\"0.00\"\n            required\n            autoComplete=\"off\"\n            onChange={e => setIsAmount(e.target.value)}\n          />\n          <input\n            type=\"date\"\n            name=\"dateNewCard\"\n            className={style.date}\n            onChange={e => setIsDate(e.target.value)}\n            autoComplete=\"off\"\n            value={isDate}\n          />\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.commentSelection}`}>\n          <input\n            type=\"text\"\n            name=\"comment\"\n            className={style.comment}\n            value={isDetails}\n            placeholder=\"-\"\n            autoComplete=\"off\"\n            onChange={e => setIsDetails(e.target.value)}\n          />\n        </div>\n\n        <div className={style.bigButtons}>\n          <BigBtnWithColorAll type=\"submit\" valueBtn=\"Add\" />\n\n          <BigBtnNoColorAll\n            valueBtn=\"Cancel\"\n            handleModal={handleAddCardModal}\n          />\n        </div>\n      </form>\n    </section>\n  );\n};\n\n/*\n\n\n*/\n\nexport default NewCardFormAll;\n\n/*\n\n\n          \n          */\n","import style from '../moneyGuard.module.scss';\nimport { months, currentYear } from '../../helpers/timeInfo';\nimport ModalTime from '../ModalTime';\nimport { useEffect, useState } from 'react';\nimport DonutChart from 'components/DonutChart';\n\nconst StatisticsAll = ({ info }) => {\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n  const [selectedMonthAndYear, setSelectedMonthAndYear] = useState([]);\n\n  const handleMonth = value => setIsSelectedMonth(value);\n  const handleYear = value => setIsSelectedYear(value);\n\n  useEffect(() => {\n    const selectedYear = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const availableMonths = selectedYear.map(info => info.month);\n    const uniqueMonths = [...new Set(availableMonths)];\n    const filteredMonths = months.filter(month =>\n      uniqueMonths.includes(month.name)\n    );\n    filteredMonths.push({ number: '-', name: '-' });\n\n    setArrayMonthInSelectedYear(filteredMonths);\n  }, [isSelectedYear, info]);\n\n  useEffect(() => {\n    const arr = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const filteredArr =\n      isSelectedMonth !== '-'\n        ? arr.filter(info => info.month === isSelectedMonth)\n        : arr;\n\n    setSelectedMonthAndYear(filteredArr);\n  }, [info, isSelectedMonth, isSelectedYear]);\n\n  const expensesArr =\n    selectedMonthAndYear.filter(transaction => transaction.type) || [];\n  const expensesArrReducer = expensesArr.reduce((acc, item) => {\n    const { category, amount, color } = item;\n    const numericAmount = parseFloat(amount);\n    if (!acc[category]) {\n      acc[category] = {\n        total: 0,\n        color: color,\n      };\n    }\n    acc[category].total += numericAmount;\n    return acc;\n  }, {});\n\n  const cumulatedExpenes = Object.entries(expensesArrReducer)\n    .map(([category, data]) => ({\n      category,\n      total: data.total,\n      color: data.color,\n    }))\n    .sort((a, b) => b.total - a.total);\n\n  const infoReducer = selectedMonthAndYear.reduce(\n    (acc, item) => {\n      const category =\n        item.type === true\n          ? 'expenses'\n          : item.type === false\n          ? 'incomes'\n          : null;\n      if (!category) return acc;\n\n      const amount = parseFloat(item.amount);\n      acc[category] += amount;\n\n      return acc;\n    },\n    {\n      incomes: 0,\n      expenses: 0,\n    }\n  );\n\n  const filterYearsForSelection = info\n    .map(info => info.date.split('-')[0])\n    .filter((year, index, array) => array.indexOf(year) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n\n  return (\n    <div className={style.statistics}>\n      <div className={style.leftSideStatistics}>\n        <h2>Expenses statistics</h2>\n        <ModalTime\n          initialValue={isSelectedYear}\n          infoPeriod={filterYearsForSelection}\n          handleYear={handleYear}\n          handleMonth={handleMonth}\n          name=\"years\"\n        />\n\n        <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n        />\n\n        {infoReducer.expenses > 0 ? (\n          <div className={style.chartWrapper}>\n            <DonutChart info={cumulatedExpenes} />\n          </div>\n        ) : null}\n      </div>\n\n      <div className={style.rightSideStatistics}>\n        <div className={style.tableHeaderCategories}>\n          <span>Category</span>\n          <span>Sum</span>\n        </div>\n        {cumulatedExpenes.map(expense => {\n          return (\n            <div key={expense.category} className={style.tableRowsCategories}>\n              <div className={style.categoryWithColor}>\n                <span style={{ backgroundColor: `${expense.color}` }}></span>\n                <span>{expense.category}</span>\n              </div>\n              <span className={style.categoryAmount}>\n                {new Intl.NumberFormat('fr-FR').format(\n                  expense.total.toFixed(2)\n                )}\n              </span>\n            </div>\n          );\n        })}\n\n        <div className={style.totalCategories}>\n          <div className={style.totalIncomes}>\n            <span>Incomes:</span>\n            <span>\n              {new Intl.NumberFormat('fr-FR').format(\n                infoReducer.incomes.toFixed(2)\n              )}\n            </span>\n          </div>\n\n          <div className={style.totalExpenses}>\n            <span>Expenses:</span>\n            <span>\n              {new Intl.NumberFormat('fr-FR').format(\n                infoReducer.expenses.toFixed(2)\n              )}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsAll;\n\n/*\n\n\n\n        */\n","import style from '../moneyGuard.module.scss';\nimport currency from 'helpers/currencyBNR';\nimport { useState, useEffect } from 'react';\nimport Balance from 'components/Balance';\nimport CurrencyAll from './CurrencyAll';\nimport ListCardsAll from 'components/TabletMobileDesign/ListCardsAll';\nimport ModalTimeAll from 'components/TabletMobileDesign/ModalTimeAll';\nimport NavAll from 'components/TabletMobileDesign/NavAll';\nimport NewCoinFormAll from './NewCoinFormAll';\nimport NewCardFormAll from './NewCardFormAll';\nimport { currentYear, currentMonthLetter } from '../../helpers/timeInfo';\nimport StatisticsAll from './StatisticsAll';\nimport Header from 'components/Header';\n\nconst AllinOne = ({ info, handleDeleteCard }) => {\n  const currenciesLocalStorage = localStorage.getItem('moneyGuardCurrency');\n  const currenciesParces = JSON.parse(currenciesLocalStorage);\n  const [isHomeNavSelected, setIsHomeNavSelected] = useState(true);\n  const [isListCurrencies, setIsListCurrencies] = useState(\n    currenciesParces || currency\n  );\n  const [isNewCoinModalOn, setIsNewCoinModalOn] = useState(false);\n  const [isNewCardModalOn, setIsNewCardModalOn] = useState(false);\n  const [isIdForCoinUpdate, setIsIdForCoinUpdate] = useState('');\n  const [isIdForCardUpdate, setIsIdForCardUpdate] = useState('');\n  useEffect(() => {\n    localStorage.setItem(\n      'moneyGuardCurrency',\n      JSON.stringify(isListCurrencies)\n    );\n  }, [isListCurrencies]);\n\n  const handleAddNewCoin = value => {\n    if (!isIdForCoinUpdate) {\n      setIsListCurrencies(prev => [...prev, value]);\n    } else {\n      const findIndex = isListCurrencies.findIndex(\n        el => el.id === isIdForCoinUpdate\n      );\n      isListCurrencies.splice(findIndex, 1, value);\n      setIsListCurrencies(isListCurrencies);\n      setIsIdForCoinUpdate('');\n    }\n\n    setIsNewCoinModalOn(prev => !prev);\n  };\n\n  const [isYearMonthForFilter, setisYearMonthForFilter] = useState({\n    year: currentYear,\n    month: currentMonthLetter,\n  });\n  //\n\n  const handleYearMonth = value => setisYearMonthForFilter(value);\n  const handleNav = () => setIsHomeNavSelected(pre => !pre);\n  const handleAddCoinModal = () => setIsNewCoinModalOn(prev => !prev);\n  const handleIdForCoinUpdate = id => {\n    setIsIdForCoinUpdate(id);\n    handleAddCoinModal();\n  };\n  const handleIdForCardUpdate = id => setIsIdForCardUpdate(id);\n  const handleIdForCoinDel = id => {\n    const newListCurrency = isListCurrencies.filter(el => el.id !== id);\n    setIsListCurrencies(newListCurrency);\n    setIsIdForCoinUpdate('');\n  };\n  const handleAddCardModal = () => setIsNewCardModalOn(prev => !prev);\n\n  return (\n    <section className={style.allinOneWrapper}>\n      <section className={style.sharedLayoutWrapper}>\n        <Header  />\n      </section>\n      \n      <div className={style.notSharedLayout}>\n        <div className={style.allinOneContainerLeft}>\n          <div className={style.navAndBalance}>\n            <NavAll isHomeSelected={isHomeNavSelected} handleNav={handleNav} />\n\n            <div className={style.preBalance}>\n              <Balance info={info} />\n            </div>\n          </div>\n\n          <CurrencyAll\n            handleAddCoinModal={handleAddCoinModal}\n            listCurrencies={isListCurrencies}\n            handleIdForCoinUpdate={handleIdForCoinUpdate}\n            handleIdForCoinDel={handleIdForCoinDel}\n          />\n        </div>\n\n        <div className={style.allinOneContainerRight}>\n          {isHomeNavSelected ? (\n            <section className={style.homeSection}>\n              <ModalTimeAll info={info} handleYearMonth={handleYearMonth} />\n              <ListCardsAll\n                handleAddCardModal={handleAddCardModal}\n                handleDeleteCard={handleDeleteCard}\n                handleIdForCardUpdate={handleIdForCardUpdate}\n                info={info}\n                isYearMonthForFilter={isYearMonthForFilter}\n              />\n            </section>\n          ) : (\n            <section className={style.statisticsSection}>\n              <StatisticsAll\n                info={info}\n                handleYearMonth={handleYearMonth}\n                isYearMonthForFilter={isYearMonthForFilter}\n              />\n            </section>\n          )}\n        </div>\n\n        {isNewCoinModalOn ? (\n          <div className={style.newCoinFormAllModal}>\n            <NewCoinFormAll\n              handleAddNewCoin={handleAddNewCoin}\n              handleAddCoinModal={handleAddCoinModal}\n              isIdForCoinUpdate={isIdForCoinUpdate}\n              isListCurrencies={isListCurrencies}\n            />\n          </div>\n        ) : null}\n        {isNewCardModalOn ? (\n          <div className={style.newCardFormAllModal}>\n            <NewCardFormAll\n              handleIdForCardUpdate={handleIdForCardUpdate}\n              handleAddCardModal={handleAddCardModal}\n              info={info}\n              isIdForCardUpdate={isIdForCardUpdate}\n            />\n          </div>\n        ) : null}\n\n      </div>\n    </section>\n  );\n};\n\nexport default AllinOne;\n\n//      <NewCoinAll />\n","\n\nexport const mainExpenses = [{ type: \"Groceries\", color: \"#ADFF2F\" },{ type: \"House care\", color: \"yellow\" },{ type: \"Self care\", color: \"#F08080\" },{ type: \"Family Care\", color: \"#6495ED\" },{ type: \"Utilities\", color: \"#B8860B\" },{ type: \"Education\", color: \"#008B8B\" },{ type: \"Leisure\", color: \"#BDB76B\" },{ type: \"Other types\", color: \"#FF8C00\" }]\nexport const mainIncomes = [{ type: \"Salary\", color: \"#FF8C00\" }, { type: \"Project\", color: \"#FFF8DC\" }, { type: \"Gift\", color: \"#7FFF00\" }, { type: \"Donation\", color: \"#90EE90\" }, { type: \"Loan\", color: \"#FFB6C1\" }, { type: \"Other\", color: \"#ADD8E6\" }]\nexport const allCategories = mainExpenses.concat(mainIncomes)","const currency = [\n  { id:'111',\n    currencyName: 'EUR',\n    nbrRate: '5.0751',\n    buyRate: '4.9990',\n    sellRate: '5.1470',\n  },\n  { id:'222',\n    currencyName: 'USD',\n    nbrRate: '4.3838',\n    buyRate: '4.3020',\n    sellRate: '4.4600',\n  },\n  { id:'333',\n    currencyName: 'GBP',\n    nbrRate: '5.8533',\n    buyRate: '5.7680',\n    sellRate: '5.9580',\n  },\n];\n\nexport default currency;\n//new Intl.NumberFormat('fr-FR').format(Number(amount).toFixed(2))","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n"],"names":["_ref","balance","info","reduce","acc","data","type","Number","amount","_jsxs","className","style","children","_jsx","color","fontWeight","Intl","NumberFormat","format","toFixed","marginLeft","CustomTooltip","active","payload","length","_payload$0$payload","category","total","percentage","item","background","padding","borderRadius","border","concat","boxShadow","margin","fontSize","_ref2","totalSum","textAlign","width","position","PieChart","height","Pie","cx","cy","innerRadius","outerRadius","dataKey","nameKey","map","entry","index","Cell","fill","Tooltip","content","top","left","transform","paddingLeft","handleLogOutModal","Logo","Link","to","title","RiLogoutCircleRLine","src","alt","infoPeriod","initialValue","name","handleMonth","handleYear","_useState","useState","_useState2","_slicedToArray","isModalOn","setisModalOn","modalRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","e","preventDefault","prev","FaChevronUp","FaAngleDown","value","nanoid","IoAddSharp","listCurrencies","handleAddCoinModal","handleIdForCoinUpdate","handleIdForCoinDel","AddButton","el","currencyName","nbrRate","buyRate","sellRate","id","MdDeleteOutline","MdOutlineModeEdit","isYearMonthForFilter","handleAddCardModal","handleDeleteCard","handleIdForCardUpdate","filteredInfoOnPeriod","filter","year","month","PiPlusMinusBold","card","date","ImPlus","ImMinus","details","handleYearMonth","currentYear","isSelectedYear","setIsSelectedYear","_useState3","currentMonthLetter","_useState4","isSelectedMonth","setIsSelectedMonth","_useState5","_useState6","isModalYearOn","setisModalYearOn","_useState7","_useState8","isModalMonthOn","setisModalMonthOn","modalRefYear","modalRefMonth","optionsYears","idx","arr","indexOf","optionsMonths","push","_objectSpread","isHomeSelected","handleNav","IoHomeSharp","ImStatsDots","valueBtn","handleModal","handleAddNewCoin","isIdForCoinUpdate","isListCurrencies","isCoin","setIsCoin","coinToBeUpdated","find","onSubmit","checkDuplicate","console","log","alert","pattern","required","autoComplete","placeholder","onChange","toUpperCase","BigBtnWithColorAll","BigBtnNoColorAll","isIdForCardUpdate","isExpense","setIsExpense","isListCategoriesOn","setIsListCategoriesOn","isOption","setIsOption","today","isDate","setIsDate","_useState9","_useState10","isAmount","setIsAmount","_useState11","_useState12","isDetails","setIsDetails","_useState13","_useState14","isColor","setIsColor","monthLether","months","number","split","defaultCard","selectedCard","arrCategory","mainExpenses","mainIncomes","buttonArrow","findIndex","splice","localStorage","setItem","JSON","stringify","checked","readOnly","toLowerCase","input","identifyColor","allCategories","handleOption","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","selectedMonthAndYear","setSelectedMonthAndYear","availableMonths","uniqueMonths","_toConsumableArray","Set","filteredMonths","includes","filteredArr","expensesArrReducer","transaction","numericAmount","parseFloat","cumulatedExpenes","Object","entries","_ref3","sort","a","b","infoReducer","incomes","expenses","filterYearsForSelection","array","localeCompare","ModalTime","DonutChart","expense","backgroundColor","currenciesLocalStorage","getItem","currenciesParces","parse","isHomeNavSelected","setIsHomeNavSelected","currency","setIsListCurrencies","isNewCoinModalOn","setIsNewCoinModalOn","isNewCardModalOn","setIsNewCardModalOn","setIsIdForCoinUpdate","setIsIdForCardUpdate","setisYearMonthForFilter","Header","NavAll","pre","Balance","CurrencyAll","newListCurrency","ModalTimeAll","ListCardsAll","StatisticsAll","NewCoinFormAll","NewCardFormAll","todayNewDate","Date","getFullYear","currentMonth","getMonth","toString","padStart","currentDay","getDate"],"sourceRoot":""}