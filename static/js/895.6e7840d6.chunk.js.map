{"version":3,"file":"static/js/895.6e7840d6.chunk.js","mappings":"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","sources":["components/Balance.jsx","components/TabletMobileDesign/AddButton.jsx","components/TabletMobileDesign/CurrencyAll.jsx","components/TabletMobileDesign/ListCardsAll.jsx","components/TabletMobileDesign/ModalTimeAll.jsx","components/TabletMobileDesign/NavAll.jsx","components/TabletMobileDesign/BigBtnWithColorAll.jsx","components/TabletMobileDesign/BigBtnNoColorAll.jsx","components/TabletMobileDesign/NewCoinFormAll.jsx","components/TabletMobileDesign/NewCardFormAll.jsx","components/TabletMobileDesign/AllinOne.jsx","helpers/categories.jsx","helpers/currencyBNR.jsx","helpers/timeInfo.jsx","webpack://react-homework-template/./src/components/moneyGuard.module.scss?adfa"],"sourcesContent":["import style from './moneyGuard.module.scss';\n\nconst Balance = ({info}) => {\n  const balance = info.reduce((acc, data) => {\n    if (data.type === false) {\n      return acc + Number(data.amount);\n    } else if (data.type === true) {\n      return acc - Number(data.amount);\n    }\n    return acc;\n  }, 0);\n\n  return (\n    <div className={style.totalSum}>\n      <p>\n        Balance: <br />\n        <span\n          style={{\n            color: balance <= 0 ? '#be242496' : 'rgb(194, 240, 126)',\n            fontWeight: 900,\n          }}\n        >\n          {' '}\n          {new Intl.NumberFormat('fr-FR').format(balance.toFixed(2))}\n        </span>{' '}\n        RON\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n","import style from \"../moneyGuard.module.scss\"\nimport { IoAddSharp } from 'react-icons/io5';\n\n\nconst AddButton = () => {\n        return (<button type=\"button\" className={style.addButtonAll} >\n                <IoAddSharp className={style.addButtonSVG}/>\n        </button>)\n}\n\nexport default AddButton","import style from '../moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport AddButton from './AddButton';\n\nconst CurrencyAll = ({\n  listCurrencies,\n  handleAddCoinModal,\n  handleIdForCoinUpdate,\n  handleIdForCoinDel,\n}) => {\n  return (\n    <div className={style.preCurrencyTableAll}>\n      <table className={style.currencyTableAll}>\n        <thead>\n          <tr>\n            <th className={style.nonRate}></th>\n            <th className={style.withRate}>NBR</th>\n            <th className={style.withRate}>Buy</th>\n            <th className={style.withRate}>Sell</th>\n            <th onClick={handleAddCoinModal}>\n              <AddButton />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCurrencies.map(el => (\n            <tr key={el.id}>\n              <td className={style.nonRate}>{el.currencyName}</td>\n              <td className={style.withRate}>\n                {Number(el.nbrRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.buyRate).toFixed(4)}\n              </td>\n              <td className={style.withRate}>\n                {Number(el.sellRate).toFixed(4)}\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '5px' }}\n                onClick={() => handleIdForCoinDel(el.id)}\n              >\n                <div className={style.deletCurrency}>\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td\n                className={style.smallBtn}\n                style={{ paddingLeft: '10px' }}\n                onClick={() => handleIdForCoinUpdate(el.id)}\n              >\n                <div className={style.editCurrency}>\n                  <MdOutlineModeEdit />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CurrencyAll;\n","import style from '../../components/moneyGuard.module.scss';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { ImMinus } from 'react-icons/im';\nimport { PiPlusMinusBold } from 'react-icons/pi';\nimport { ImPlus } from 'react-icons/im';\nimport AddButton from './AddButton';\n\n\nconst ListCardsAll = ({ info, isYearMonthForFilter,handleAddCardModal,handleDeleteCard,handleIdForCardUpdate }) => {\n  \n  const filteredInfoOnPeriod = info.filter(el => Number(el.year) === Number(isYearMonthForFilter.year))\n                                   .filter(el => {if(isYearMonthForFilter.month === \"-\"){ return el }\n                                   else { return el.month === isYearMonthForFilter.month }\n                                   })\n  const handleAddNewCard = () => { handleAddCardModal(); handleIdForCardUpdate(\"\") }\n  return (\n    <div className={style.listCardsTabletContainer}>\n      <table>\n        <thead>\n          <tr>\n            <th  style={{width: \"100px\"}}>Date</th>\n            <th className={style.piPlusMinusBold}>\n              <PiPlusMinusBold className={style.plusMinus} />\n            </th>\n            <th style={{width: \"100px\"}}>Category</th>\n            <th style={{width: \"340px\"}}>Comment</th>\n            <th style={{width: \"80px\"}}>Sum</th>\n            <th onClick={handleAddNewCard}><AddButton /></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredInfoOnPeriod.map(card => (\n            <tr key={card.id} >\n              <td className={style.cardDate} style={{width: \"100px\"}}>{card.date}</td>\n              <td className={style.cardType}>\n                {card.type ? <ImPlus className={style.imPlus}/> : <ImMinus className={style.imMinus}/>}\n              </td>\n              <td className={style.cardCategory} style={{width: \"100px\"}}>{card.category}</td>\n              <td className={style.cardDetails} style={{width: \"340px\", color: \"wheat\"}}>{card.details}</td>\n              <td className={style.cardAmount} style={{width: \"80px\"}}>{new Intl.NumberFormat('fr-FR').format(Number(card.amount).toFixed(2))}</td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() =>handleDeleteCard(card.id)}>\n                <div className={style.deletCurrency} >\n                  <MdDeleteOutline />\n                </div>\n              </td>\n              <td className={style.cardButton} style={{ padding: \"0px 5px 5px 5px\" }} onClick={() => { handleIdForCardUpdate(card.id);; handleAddCardModal()}}>\n                <div className={style.editCurrency} >\n                  <MdOutlineModeEdit/>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListCardsAll;\n\n/* <tbody></tbody>\n\n\n\n\n<table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Type</th>\n          <th>Category</th>\n          <th>Comment</th>\n          <th>Sum</th>\n          <th></th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id} style={{ backgroundColor: item.color }}>\n            <td>{item.date}</td>\n            <td>{item.type ? 'Income' : 'Expense'}</td>\n            <td>{item.category}</td>\n            <td>{item.details}</td>\n            <td>{item.amount}</td>\n            <td>\n              <button>Edit</button>\n            </td>\n            <td>\n              <button>Delete</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n\n*/\n","import style from '../../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { currentYear, currentMonthLetter } from 'helpers/timeInfo';\n\nconst ModalTimeAll = ({ info, handleYearMonth }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState(currentMonthLetter);\n  const [isModalYearOn, setisModalYearOn] = useState(false);\n  const [isModalMonthOn, setisModalMonthOn] = useState(false);\n\n  const modalRefYear = useRef(null);\n  const modalRefMonth = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (\n        modalRefYear.current &&\n        !modalRefYear.current.contains(event.target)\n      ) {\n        setisModalYearOn(false);\n      }\n\n      if (\n        modalRefMonth.current &&\n        !modalRefMonth.current.contains(event.target)\n      ) {\n        setisModalMonthOn(false);\n      }\n    };\n\n    if (isModalYearOn || isModalMonthOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalYearOn, isModalMonthOn]);\n\n  const optionsYears = info\n    .map(el => el.year)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n\n  const optionsMonths = info\n    .filter(el => Number(el.year) === Number(isSelectedYear))\n    .map(el => el.month)\n    .filter((el, idx, arr) => arr.indexOf(el) === idx);\n  optionsMonths.push(\"-\");\n  const handleOptionYear = value => {\n    setisModalYearOn(false);\n    setIsSelectedMonth(\"-\");\n    handleYearMonth(prev => ({ ...prev, year: value, month:\"-\" }));\n    setIsSelectedYear(value);\n  };\n\n  const handleOptionMonth = value => {\n    setisModalMonthOn(false);\n    setIsSelectedMonth(value);\n    handleYearMonth(prev => ({ ...prev, month: value }));\n  };\n\n  return (\n    <div className={style.modalTimeSelect} ref={modalRefMonth}>\n      <div className={style.years}>\n        <div\n          className={\n            isModalYearOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedYear}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalYearOn(prev => !prev);\n            }}\n          >\n            {isModalYearOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalYearOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsYears.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionYear(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className={style.months}>\n        <div\n          className={\n            isModalMonthOn\n              ? `${style.headerPeriodOff} ${style.headerPeriodOn}`\n              : `${style.headerPeriodOff}`\n          }\n        >\n          <span>{isSelectedMonth}</span>\n          <button\n            type=\"button\"\n            onClick={e => {\n              e.preventDefault();\n              setisModalMonthOn(prev => !prev);\n            }}\n          >\n            {isModalMonthOn ? <FaChevronUp /> : <FaAngleDown />}\n          </button>\n        </div>\n        {isModalMonthOn && (\n          <ul className={`${style.listPeriod}`}>\n            {optionsMonths.map(item => (\n              <li key={nanoid()}>\n                <button type=\"button\" onClick={() => handleOptionMonth(item)}>\n                  {item}\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModalTimeAll;\n","import { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from 'react-icons/im';\nimport style from \"../../components/moneyGuard.module.scss\"\n\nconst NavAll = ({ isHomeSelected, handleNav }) => {\n  return (\n    <nav>\n      <div\n        onClick={isHomeSelected ? null : handleNav}\n        className={\n          isHomeSelected\n            ? `${style.selectedNavAll}`\n            : `${style.notSelectedNavAll}`\n        }\n      >\n        <IoHomeSharp />\n        <span>Home</span>\n      </div>\n\n      <div\n        onClick={isHomeSelected ? handleNav : null}\n        className={\n          isHomeSelected\n            ? `${style.notSelectedNavAll}`\n            : `${style.selectedNavAll}`\n        }\n      >\n        <ImStatsDots />\n        <span>Statistics</span>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavAll\n","import style from \"../moneyGuard.module.scss\"\n\nconst BigBtnWithColorAll = ({valueBtn,type}) => {\n        return <button type={type} className={style.bigBtnWithColor} >{valueBtn}</button>\n}\n\nexport default BigBtnWithColorAll","import style from \"../moneyGuard.module.scss\"\n\n\nconst BigBtnNoColorAll = ({valueBtn, handleModal}) => {\n        return <button className={style.bigBtnNoColor} onClick={handleModal}>{valueBtn}</button>\n}\n\nexport default BigBtnNoColorAll","import style from '../moneyGuard.module.scss';\nimport { useState,useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCoinFormAll = ({\n  handleAddNewCoin,\n  handleAddCoinModal,\n  isIdForCoinUpdate,\n  isListCurrencies,\n}) => {\n\n  const [isCoin, setIsCoin] = useState({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n\n\n\n  useEffect(() => {\n      const coinToBeUpdated = isListCurrencies.find(\n    el => el.id === isIdForCoinUpdate\n    );\n    \n    if (isIdForCoinUpdate) {\n    setIsCoin(coinToBeUpdated);\n  } },[isIdForCoinUpdate, isListCurrencies])\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddNewCoin(isCoin);\n  };\n  const handleCancel = e => {\n    e.preventDefault();\n    setIsCoin({\n      id: nanoid(),\n      currencyName: '',\n      nbrRate: '',\n      buyRate: '',\n      sellRate: '',\n    });\n    handleAddCoinModal();\n  }\n  return (\n    <form className={style.newCoinFormAll} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"currencyName\"\n        pattern=\"^[A-Za-z]{3}$\"\n        title=\"Enter exactly 3 letters.Example: USD, RON, EUR\"\n        value={isCoin.currencyName}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Currency name\"\n        onChange={e =>\n          setIsCoin(prev => ({\n            ...prev,\n            currencyName: e.target.value.toUpperCase(),\n          }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"nbrRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.nbrRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Central bank rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, nbrRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"buyRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.buyRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Buy rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, buyRate: e.target.value }))\n        }\n      />\n      <input\n        type=\"text\"\n        name=\"sellRate\"\n        pattern=\"^\\d{1,3}(\\.\\d{1,4})?$\"\n        title=\"Number with up to 4 decimal places. Use dot as separator. Example: 5.00\"\n        value={isCoin.sellRate}\n        required\n        autoComplete=\"off\"\n        placeholder=\"Sell rate\"\n        onChange={e =>\n          setIsCoin(prev => ({ ...prev, sellRate: e.target.value }))\n        }\n      />\n      <div className={style.bigButtons}>\n        <BigBtnWithColorAll valueBtn=\"Save\" type=\"submit\" />\n        <BigBtnNoColorAll\n          valueBtn=\"Close\"\n          handleModal={handleCancel}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default NewCoinFormAll;\n","import style from '../moneyGuard.module.scss';\nimport { useEffect, useState } from 'react';\nimport {\n  mainIncomes,\n  mainExpenses,\n  allCategories,\n} from '../../helpers/categories';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport { today, months } from '../../helpers/timeInfo';\nimport BigBtnWithColorAll from './BigBtnWithColorAll';\nimport BigBtnNoColorAll from './BigBtnNoColorAll';\n\nconst NewCardFormAll = ({ info, handleAddCardModal, isIdForCardUpdate, handleIdForCardUpdate }) => {\n  const [isExpense, setIsExpense] = useState(false);\n  const [isListCategoriesOn, setIsListCategoriesOn] = useState(false);\n  const [isOption, setIsOption] = useState('Select a category');\n  const [isDate, setIsDate] = useState(today);\n  const [isAmount, setIsAmount] = useState('');\n  const [isDetails, setIsDetails] = useState('');\n  const [isColor, setIsColor] = useState('');\n\n  const monthPreLether = months.filter(\n    month => month.number === isDate.split('-')[1]\n  );\n  const monthLether = monthPreLether[0].name;\n  const defaultCard = {\n    id: nanoid(),\n    date: isDate,\n    year: isDate.split('-')[0],\n    month: monthLether,\n    type: isExpense,\n    category: isOption,\n    details: isDetails,\n    amount: isAmount,\n    color: isColor,\n  };\n\n const selectedCard = info.find(card => card.id === isIdForCardUpdate)\n console.log(\"selectedCard\",selectedCard)\n\n  useEffect(()=>{ if (selectedCard) {\n    \n    setIsExpense(selectedCard.type); \n    setIsOption(selectedCard.category);\n    setIsDate(selectedCard.date);\n    setIsAmount(selectedCard.amount);\n    setIsDetails(selectedCard.details);\n    setIsColor(selectedCard.color)\n  }},[selectedCard])\n\n\n\n  let arrCategory = isExpense ? mainExpenses : mainIncomes;\n  const buttonArrow = isListCategoriesOn ? <FaChevronUp /> : <FaAngleDown />;\n\n  const handleToggle = () => {\n    setIsExpense(prev => !prev);\n    setIsOption('Select a category');\n  };\n  const handleSelectedCategory = e => {\n    e.preventDefault();\n    setIsListCategoriesOn(prev => !prev);\n  };\n  const handleOption = input => {\n    setIsOption(input);\n    const identifyColor = allCategories.find(\n      category => category.type === input\n    );\n    setIsColor(identifyColor.color);\n    setIsListCategoriesOn(prev => !prev);\n  };\n\n  const submitNewCard = e => {\n    e.preventDefault();\n\n    const index = info.findIndex(card => card.id === isIdForCardUpdate);\n    if (isIdForCardUpdate) {\n      info.splice(index, 1,defaultCard);\n    }else{info.push(defaultCard);}\n\n    if (isOption === 'Select a category') {\n      alert('Please select a type of income or expense.');\n      return;\n    }\n\n    if (isAmount === '') {\n      alert('Please add a value higher than 0.00');\n      return;\n    }\n    if (Number(defaultCard.year) < 2020) {\n      alert('Please enter a date that starts with year 2020');\n      return;\n    }\n       \n    localStorage.setItem('listCards', JSON.stringify(info));\n    setIsExpense(false);\n    setIsListCategoriesOn(false);\n    setIsOption('Select a category');\n    setIsDate(today);\n    setIsAmount('');\n    setIsDetails('');\n    setIsColor('');\n    handleIdForCardUpdate(\"\")\n handleAddCardModal();\n  };\n\n  return (\n    <section className={style.newCardContainer}>\n      <h2>Add transaction</h2>\n\n      <form className={style.newCardForm} onSubmit={submitNewCard}>\n        <div className={style.newCardToggle}>\n          <span style={{ color: isExpense ? 'white' : 'rgb(194, 240, 126)' }}>\n            Income\n          </span>\n          <label className={style.switch}>\n            <input\n              type=\"checkbox\"\n              name=\"toggleNewCard\"\n              checked={isExpense}\n              onChange={handleToggle}\n              autoComplete=\"off\"\n            />\n            <span className={`${style.slider} ${style.round}`}></span>\n          </label>\n          <span style={{ color: isExpense ? 'rgb(211, 76, 76)' : 'white' }}>\n            Expense\n          </span>\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.categorySelection}`}>\n          <input\n            type=\"text\"\n            value={isOption}\n            readOnly\n            name=\"selectAcategory\"\n            style={{\n              color:\n                isOption === 'Select a category'\n                  ? 'rgba(206, 204, 204, 0.664)'\n                  : 'white',\n            }}\n            autoComplete=\"off\"\n          />\n          <button\n            onClick={handleSelectedCategory}\n            className={style.rowFormNewCardElem2}\n          >\n            {buttonArrow}\n          </button>\n        </div>\n\n        {isListCategoriesOn ? (\n          <ul className={style.newCardList}>\n            {arrCategory.map(category => (\n              <li\n                key={category.type}\n                value={category.type.toLowerCase()}\n                className={style.newCardOption}\n                onClick={() => handleOption(category.type)}\n              >\n                <input\n                  type=\"text\"\n                  name={category.type}\n                  value={category.type}\n                  readOnly\n                  autoComplete=\"off\"\n                  required\n                  className={\n                    !isExpense ? `${style.income}` : `${style.expense}`\n                  }\n                />\n              </li>\n            ))}\n          </ul>\n        ) : null}\n\n        <div\n          className={`${style.rowFormNewCard} ${style.amountAndDateSelection}`}\n        >\n          <input\n            className={style.amount}\n            type=\"text\"\n            name=\"amount\"\n            pattern=\"^\\d+(\\.\\d{1,2})?$\"\n            value={isAmount}\n            title=\"Enter an amount highet than 0, that has the followig format 5, 5.5 or 5.00\"\n            placeholder=\"0.00\"\n            required\n            autoComplete=\"off\"\n            onChange={e => setIsAmount(e.target.value)}\n          />\n          <input\n            type=\"date\"\n            name=\"dateNewCard\"\n            className={style.date}\n            onChange={e => setIsDate(e.target.value)}\n            autoComplete=\"off\"\n            value={isDate}\n          />\n        </div>\n\n        <div className={`${style.rowFormNewCard} ${style.commentSelection}`}>\n          <input\n            type=\"text\"\n            name=\"comment\"\n            className={style.comment}\n            value={isDetails}\n            placeholder=\"-\"\n            autoComplete=\"off\"\n            onChange={e => setIsDetails(e.target.value)}\n          />\n        </div>\n\n        <div className={style.bigButtons}>\n          <BigBtnWithColorAll type=\"submit\" valueBtn=\"Add\" />\n\n          <BigBtnNoColorAll\n            valueBtn=\"Cancel\"\n            handleModal={handleAddCardModal}\n          />\n        </div>\n      </form>\n    </section>\n  );\n};\n\n/*\n\n\n*/\n\nexport default NewCardFormAll;\n\n/*\n\n\n          \n          */\n","import style from '../moneyGuard.module.scss';\nimport currency from 'helpers/currencyBNR';\nimport { useState, useEffect } from 'react';\nimport Balance from 'components/Balance';\nimport CurrencyAll from './CurrencyAll';\nimport ListCardsAll from 'components/TabletMobileDesign/ListCardsAll';\nimport ModalTimeAll from 'components/TabletMobileDesign/ModalTimeAll';\nimport NavAll from 'components/TabletMobileDesign/NavAll';\nimport NewCoinFormAll from './NewCoinFormAll';\nimport NewCardFormAll from './NewCardFormAll';\nimport { currentYear, currentMonthLetter } from '../../helpers/timeInfo';\n\nconst AllinOne = ({ info, handleDeleteCard }) => {\n  const currenciesLocalStorage = localStorage.getItem('moneyGuardCurrency');\n  const currenciesParces = JSON.parse(currenciesLocalStorage);\n  const [isHomeNavSelected, setIsHomeNavSelected] = useState(true);\n  const [isListCurrencies, setIsListCurrencies] = useState(\n    currenciesParces || currency\n  );\n  const [isNewCoinModalOn, setIsNewCoinModalOn] = useState(false);\n  const [isNewCardModalOn, setIsNewCardModalOn] = useState(false);\n  const [isIdForCoinUpdate, setIsIdForCoinUpdate] = useState('');\n  const [isIdForCardUpdate, setIsIdForCardUpdate] = useState('');\n  useEffect(() => {\n    localStorage.setItem(\n      'moneyGuardCurrency',\n      JSON.stringify(isListCurrencies)\n    );\n  }, [isListCurrencies]);\n\n  const handleAddNewCoin = value => {\n    if (!isIdForCoinUpdate) {\n      setIsListCurrencies(prev => [...prev, value]);\n    } else {\n      const findIndex = isListCurrencies.findIndex(\n        el => el.id === isIdForCoinUpdate\n      );\n      isListCurrencies.splice(findIndex, 1, value);\n      setIsListCurrencies(isListCurrencies);\n      setIsIdForCoinUpdate('');\n    }\n\n    setIsNewCoinModalOn(prev => !prev);\n  };\n\n  const [isYearMonthForFilter, setisYearMonthForFilter] = useState({\n    year: currentYear,\n    month: currentMonthLetter,\n  });\n  //\n\n  const handleYearMonth = value => setisYearMonthForFilter(value);\n  const handleNav = () => setIsHomeNavSelected(pre => !pre);\n  const handleAddCoinModal = () => setIsNewCoinModalOn(prev => !prev);\n  const handleIdForCoinUpdate = id => {\n    setIsIdForCoinUpdate(id);\n    handleAddCoinModal();\n  };\n  const handleIdForCardUpdate = id => setIsIdForCardUpdate(id);\n  const handleIdForCoinDel = id => {\n    const newListCurrency = isListCurrencies.filter(el => el.id !== id);\n    setIsListCurrencies(newListCurrency);\n    setIsIdForCoinUpdate('');\n  };\n  const handleAddCardModal = () => setIsNewCardModalOn(prev => !prev);\n\n  return (\n    <section className={style.allinOneWrapper}>\n      <div className={style.allinOneContainerLeft}>\n        <NavAll isHomeSelected={isHomeNavSelected} handleNav={handleNav} />\n\n        <div className={style.preBalance}>\n          <Balance info={info} />\n        </div>\n\n        <CurrencyAll\n          handleAddCoinModal={handleAddCoinModal}\n          listCurrencies={isListCurrencies}\n          handleIdForCoinUpdate={handleIdForCoinUpdate}\n          handleIdForCoinDel={handleIdForCoinDel}\n        />\n      </div>\n\n      <div className={style.allinOneContainerRight}>\n        {isHomeNavSelected ? (\n          <section className={style.homeSection}>\n            <ModalTimeAll info={info} handleYearMonth={handleYearMonth} />\n            <ListCardsAll\n              handleAddCardModal={handleAddCardModal}\n              handleDeleteCard={handleDeleteCard}\n              handleIdForCardUpdate={handleIdForCardUpdate}\n              info={info}\n              isYearMonthForFilter={isYearMonthForFilter}\n            />\n          </section>\n        ) : <section className={style.StatisticsSection}>\n            <p>Stats</p>\n          </section>}\n      </div>\n\n      {isNewCoinModalOn ? (\n        <div className={style.newCoinFormAllModal}>\n          <NewCoinFormAll\n            handleAddNewCoin={handleAddNewCoin}\n            handleAddCoinModal={handleAddCoinModal}\n            isIdForCoinUpdate={isIdForCoinUpdate}\n            isListCurrencies={isListCurrencies}\n          />\n        </div>\n      ) : null}\n      {isNewCardModalOn ? (\n        <div className={style.newCardFormAllModal}>\n          <NewCardFormAll\n            handleIdForCardUpdate={handleIdForCardUpdate}\n            handleAddCardModal={handleAddCardModal}\n            info={info}\n            isIdForCardUpdate={isIdForCardUpdate}\n          />\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nexport default AllinOne;\n\n//      <NewCoinAll />\n","\n\nexport const mainExpenses = [{ type: \"Groceries\", color: \"#ADFF2F\" },{ type: \"House care\", color: \"yellow\" },{ type: \"Self care\", color: \"#F08080\" },{ type: \"Family Care\", color: \"#6495ED\" },{ type: \"Utilities\", color: \"#B8860B\" },{ type: \"Education\", color: \"#008B8B\" },{ type: \"Leisure\", color: \"#BDB76B\" },{ type: \"Other types\", color: \"#FF8C00\" }]\nexport const mainIncomes = [{ type: \"Salary\", color: \"#FF8C00\" }, { type: \"Project\", color: \"#FFF8DC\" }, { type: \"Gift\", color: \"#7FFF00\" }, { type: \"Donation\", color: \"#90EE90\" }, { type: \"Loan\", color: \"#FFB6C1\" }, { type: \"Other\", color: \"#ADD8E6\" }]\nexport const allCategories = mainExpenses.concat(mainIncomes)","const currency = [\n  { id:'111',\n    currencyName: 'EUR',\n    nbrRate: '5.0751',\n    buyRate: '4.9990',\n    sellRate: '5.1470',\n  },\n  { id:'222',\n    currencyName: 'USD',\n    nbrRate: '4.3838',\n    buyRate: '4.3020',\n    sellRate: '4.4600',\n  },\n  { id:'333',\n    currencyName: 'GBP',\n    nbrRate: '5.8533',\n    buyRate: '5.7680',\n    sellRate: '5.9580',\n  },\n];\n\nexport default currency;\n//new Intl.NumberFormat('fr-FR').format(Number(amount).toFixed(2))","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"newCoinFormButtons\":\"moneyGuard_newCoinFormButtons__Ld2LJ\",\"bigButton\":\"moneyGuard_bigButton__mbF3Z\",\"selectedBtn\":\"moneyGuard_selectedBtn__r-mtr\",\"notSelectedBtn\":\"moneyGuard_notSelectedBtn__-Hsty\",\"logWrapper\":\"moneyGuard_logWrapper__LSf9A\",\"regWrapper\":\"moneyGuard_regWrapper__YtLxi\",\"logoutWrapper\":\"moneyGuard_logoutWrapper__dNrg3\",\"loginContainer\":\"moneyGuard_loginContainer__zdqlN\",\"registerContainer\":\"moneyGuard_registerContainer__J4m2L\",\"logoWrapper\":\"moneyGuard_logoWrapper__ZabCu\",\"formLogReg\":\"moneyGuard_formLogReg__dlmBz\",\"formInput\":\"moneyGuard_formInput__zaLNk\",\"sharedLayoutWrapper\":\"moneyGuard_sharedLayoutWrapper__WypJz\",\"sharedLayoutHeader\":\"moneyGuard_sharedLayoutHeader__xecHh\",\"sharedLayoutUser\":\"moneyGuard_sharedLayoutUser__UL7Kx\",\"navLinks\":\"moneyGuard_navLinks__G2DUI\",\"selectedNav\":\"moneyGuard_selectedNav__PSmeh\",\"homePageWrapper\":\"moneyGuard_homePageWrapper__asSk6\",\"statisticsWrapper\":\"moneyGuard_statisticsWrapper__YyZV-\",\"currencyWrapper\":\"moneyGuard_currencyWrapper__T8iPT\",\"homePage\":\"moneyGuard_homePage__eJdWd\",\"listCards\":\"moneyGuard_listCards__VzXYi\",\"totalSum\":\"moneyGuard_totalSum__RjnxD\",\"statisticsPeriod\":\"moneyGuard_statisticsPeriod__KbPla\",\"headerPeriodOff\":\"moneyGuard_headerPeriodOff__Glj3Z\",\"headerPeriodOn\":\"moneyGuard_headerPeriodOn__utgKu\",\"listPeriod\":\"moneyGuard_listPeriod__t0xEJ\",\"cardwithColor\":\"moneyGuard_cardwithColor__EUcJl\",\"card\":\"moneyGuard_card__Ge4pl\",\"cardRow\":\"moneyGuard_cardRow__oFwuR\",\"cardRowValue\":\"moneyGuard_cardRowValue__6CcqP\",\"cardRowButtons\":\"moneyGuard_cardRowButtons__LsVBD\",\"addCardButton\":\"moneyGuard_addCardButton__StuE1\",\"logoutContainer\":\"moneyGuard_logoutContainer__JSNtD\",\"newCardWrapper\":\"moneyGuard_newCardWrapper__JI3ME\",\"newCoinWrapper\":\"moneyGuard_newCoinWrapper__eq4j4\",\"newCardContainer\":\"moneyGuard_newCardContainer__c8BXa\",\"newCardToggle\":\"moneyGuard_newCardToggle__DLsMb\",\"switch\":\"moneyGuard_switch__9UCPA\",\"slider\":\"moneyGuard_slider__yYkdM\",\"newCardForm\":\"moneyGuard_newCardForm__ZTfH+\",\"rowFormNewCard\":\"moneyGuard_rowFormNewCard__psgqW\",\"categorySelection\":\"moneyGuard_categorySelection__s-FD0\",\"newCardList\":\"moneyGuard_newCardList__wtIu8\",\"newCardOption\":\"moneyGuard_newCardOption__Mz+j9\",\"income\":\"moneyGuard_income__LwrhA\",\"expense\":\"moneyGuard_expense__tYS9B\",\"amountAndDateSelection\":\"moneyGuard_amountAndDateSelection__JJMgu\",\"amount\":\"moneyGuard_amount__jKQQ3\",\"date\":\"moneyGuard_date__q4+Am\",\"comment\":\"moneyGuard_comment__D+o-l\",\"newCardButtons\":\"moneyGuard_newCardButtons__OC+rK\",\"chartWrapper\":\"moneyGuard_chartWrapper__JMupN\",\"chart\":\"moneyGuard_chart__Q-JYc\",\"statistics\":\"moneyGuard_statistics__ukV59\",\"tableHeaderCategories\":\"moneyGuard_tableHeaderCategories__QYosi\",\"tableRowsCategories\":\"moneyGuard_tableRowsCategories__n0Imj\",\"categoryWithColor\":\"moneyGuard_categoryWithColor__ve7h0\",\"totalCategories\":\"moneyGuard_totalCategories__cA7C6\",\"totalExpenses\":\"moneyGuard_totalExpenses__JKPug\",\"totalIncomes\":\"moneyGuard_totalIncomes__jRt7F\",\"currencyContainer\":\"moneyGuard_currencyContainer__tUuJV\",\"currencyContainerHeader\":\"moneyGuard_currencyContainerHeader__bUVQE\",\"addCoinButton\":\"moneyGuard_addCoinButton__tOiSX\",\"currencyTable\":\"moneyGuard_currencyTable__jGu-G\",\"currencyTableHeader\":\"moneyGuard_currencyTableHeader__x2Inm\",\"currencyTableRow\":\"moneyGuard_currencyTableRow__Xacte\",\"currencyTableRate\":\"moneyGuard_currencyTableRate__5iVYk\",\"currencyTableNotRate\":\"moneyGuard_currencyTableNotRate__XuqjR\",\"currencyTableContent\":\"moneyGuard_currencyTableContent__r2UMv\",\"editCurrency\":\"moneyGuard_editCurrency__xRL+F\",\"deletCurrency\":\"moneyGuard_deletCurrency__JQYaZ\",\"newCoinContainer\":\"moneyGuard_newCoinContainer__+84h6\",\"newCoinForm\":\"moneyGuard_newCoinForm__b8dAL\",\"allinOneWrapper\":\"moneyGuard_allinOneWrapper__5tKyQ\",\"allinOneContainerLeft\":\"moneyGuard_allinOneContainerLeft__0hQOX\",\"selectedNavAll\":\"moneyGuard_selectedNavAll__ZUNgw\",\"notSelectedNavAll\":\"moneyGuard_notSelectedNavAll__5efLD\",\"preBalance\":\"moneyGuard_preBalance__oYN8J\",\"preCurrencyTableAll\":\"moneyGuard_preCurrencyTableAll__24I+Y\",\"currencyTableAll\":\"moneyGuard_currencyTableAll__8iXrk\",\"nonRate\":\"moneyGuard_nonRate__9zKFT\",\"withRate\":\"moneyGuard_withRate__J2h7I\",\"addButtonAll\":\"moneyGuard_addButtonAll__Lm82Q\",\"smallBtn\":\"moneyGuard_smallBtn__IT-vZ\",\"allinOneContainerRight\":\"moneyGuard_allinOneContainerRight__BsYJe\",\"homeSection\":\"moneyGuard_homeSection__gnFdl\",\"modalTimeSelect\":\"moneyGuard_modalTimeSelect__rPkuO\",\"listCardsTabletContainer\":\"moneyGuard_listCardsTabletContainer__FuYj2\",\"plusMinus\":\"moneyGuard_plusMinus__xswkY\",\"imPlus\":\"moneyGuard_imPlus__EV44y\",\"imMinus\":\"moneyGuard_imMinus__fHXmP\",\"newCoinFormAllModal\":\"moneyGuard_newCoinFormAllModal__b49ug\",\"newCoinFormAll\":\"moneyGuard_newCoinFormAll__-3gxX\",\"newCardFormAllModal\":\"moneyGuard_newCardFormAllModal__mXi17\",\"bigButtons\":\"moneyGuard_bigButtons__ykOi-\",\"addButtonSVG\":\"moneyGuard_addButtonSVG__8NJYe\",\"bigBtnWithColor\":\"moneyGuard_bigBtnWithColor__-XJMQ\",\"bigBtnNoColor\":\"moneyGuard_bigBtnNoColor__DlIYb\",\"form\":\"moneyGuard_form__dgiW8\"};"],"names":["_ref","balance","info","reduce","acc","data","type","Number","amount","_jsx","className","style","children","_jsxs","color","fontWeight","Intl","NumberFormat","format","toFixed","IoAddSharp","listCurrencies","handleAddCoinModal","handleIdForCoinUpdate","handleIdForCoinDel","onClick","AddButton","map","el","currencyName","nbrRate","buyRate","sellRate","paddingLeft","id","MdDeleteOutline","MdOutlineModeEdit","isYearMonthForFilter","handleAddCardModal","handleDeleteCard","handleIdForCardUpdate","filteredInfoOnPeriod","filter","year","month","width","PiPlusMinusBold","card","date","ImPlus","ImMinus","category","details","padding","handleYearMonth","_useState","useState","currentYear","_useState2","_slicedToArray","isSelectedYear","setIsSelectedYear","_useState3","currentMonthLetter","_useState4","isSelectedMonth","setIsSelectedMonth","_useState5","_useState6","isModalYearOn","setisModalYearOn","_useState7","_useState8","isModalMonthOn","setisModalMonthOn","modalRefYear","useRef","modalRefMonth","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","optionsYears","idx","arr","indexOf","optionsMonths","push","ref","concat","e","preventDefault","prev","FaChevronUp","FaAngleDown","item","value","_objectSpread","nanoid","isHomeSelected","handleNav","IoHomeSharp","ImStatsDots","valueBtn","handleModal","handleAddNewCoin","isIdForCoinUpdate","isListCurrencies","isCoin","setIsCoin","coinToBeUpdated","find","onSubmit","name","pattern","title","required","autoComplete","placeholder","onChange","toUpperCase","BigBtnWithColorAll","BigBtnNoColorAll","isIdForCardUpdate","isExpense","setIsExpense","isListCategoriesOn","setIsListCategoriesOn","isOption","setIsOption","today","isDate","setIsDate","_useState9","_useState10","isAmount","setIsAmount","_useState11","_useState12","isDetails","setIsDetails","_useState13","_useState14","isColor","setIsColor","monthLether","months","number","split","defaultCard","selectedCard","console","log","arrCategory","mainExpenses","mainIncomes","buttonArrow","index","findIndex","splice","alert","localStorage","setItem","JSON","stringify","checked","readOnly","toLowerCase","input","identifyColor","allCategories","handleOption","currenciesLocalStorage","getItem","currenciesParces","parse","isHomeNavSelected","setIsHomeNavSelected","currency","setIsListCurrencies","isNewCoinModalOn","setIsNewCoinModalOn","isNewCardModalOn","setIsNewCardModalOn","setIsIdForCoinUpdate","setIsIdForCardUpdate","setisYearMonthForFilter","NavAll","pre","Balance","CurrencyAll","newListCurrency","ModalTimeAll","ListCardsAll","NewCoinFormAll","_toConsumableArray","NewCardFormAll","todayNewDate","Date","getFullYear","currentMonth","getMonth","toString","padStart","currentDay","getDate"],"sourceRoot":""}