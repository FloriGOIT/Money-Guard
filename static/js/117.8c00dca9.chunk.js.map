{"version":3,"file":"static/js/117.8c00dca9.chunk.js","mappings":"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","sources":["components/Card.jsx","components/ListCardsMobile.jsx","pages/Home.jsx","components/Nav.jsx","components/ModalTime.jsx","components/TabletMobileDesign/AddButton.jsx","helpers/timeInfo.jsx","components/Balance.jsx"],"sourcesContent":["import styles from '../components/moneyGuard.module.scss';\nimport { Link } from 'react-router-dom';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\n\nconst Card = ({data,handleDeleteCard}) => {\n        const {id, date, type, category, details, amount } = data;\n  return (\n    <div className={styles.cardwithColor} style={{backgroundColor: type === false ? \"rgb(119, 235, 65)\": \"rgb(207, 47, 47)\" }}>\n      <div className={styles.card}>\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Date</span>\n          <span className={styles.cardRowValue}>{date}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Type</span>\n          <span className={styles.cardRowValue}>{type === false ?\"Income\":'Expense'}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Category</span>\n          <span className={styles.cardRowValue}>{category}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Details</span>\n          <span className={styles.cardRowValue} style={{color:'wheat', textAlign:\"end\", wordSpacing:\"0.3em\"}}>{details}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Sum</span>\n          <span className={styles.cardRowValue}>{new Intl.NumberFormat('fr-FR').format(Number(amount).toFixed(2))}</span>\n        </div>\n\n        <div className={styles.cardRowButtons}>\n          <button type=\"button\" className={styles.selectedBtn} onClick={()=>handleDeleteCard(id)}>\n            <MdDeleteOutline/>\n          </button>\n          <Link to={`/newCard/${id}`}>\n            <button type=\"button\" className={styles.notSelectedBtn}>\n              <MdOutlineModeEdit />\n            </button>\n          </Link>\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import style from './moneyGuard.module.scss';\nimport Card from './Card';\nimport { Link } from 'react-router-dom';\nimport ModalTime from './ModalTime';\nimport { useState,useEffect } from 'react';\nimport { months, currentYear } from '../helpers/timeInfo';\nimport Balance from './Balance';\nimport AddButton from './TabletMobileDesign/AddButton';\n\nconst ListCardsMobile = ({ info, handleDeleteCard }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n\n\n  const handleYear = value => setIsSelectedYear(value);\n  const filterYearsForSelection = info\n    .map(card => card.year)\n    .filter((el, index, arr) => arr.indexOf(el) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n  \nconst handleMonth = value => setIsSelectedMonth(value);\n  \n    useEffect(() => {\n      const selectedYear = info.filter(\n        info => Number(info.year) === Number(isSelectedYear)\n      );\n      const availableMonths = selectedYear.map(info => info.month);\n      const uniqueMonths = [...new Set(availableMonths)];\n      const filteredMonths = months.filter(month =>\n        uniqueMonths.includes(month.name)\n      );\n      filteredMonths.push({ number: '-', name: '-' });\n  \n      setArrayMonthInSelectedYear(filteredMonths);\n    }, [isSelectedYear, info]);\n\n  const arrDataByYear = info.filter(data => Number(data.year) === Number(isSelectedYear))\n  .sort((a, b) => new Date(b.date) - new Date(a.date));\n  const arrDataByYearAndMonth = arrDataByYear.filter(data => data.month === isSelectedMonth)\n  const arrDataToDisplay = isSelectedMonth === \"-\" ? arrDataByYear : arrDataByYearAndMonth\n\n\n  return (\n    <section className={style.listCards}>\n      <Balance info={info} />\n\n      <ModalTime\n        initialValue={isSelectedYear}\n        infoPeriod={filterYearsForSelection}\n        handleYear={handleYear}\n        handleMonth={handleMonth}\n        name=\"years\"\n      />\n\n      <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n      />\n\n      {arrDataToDisplay.map((data, index) => (\n        <Card\n          data={data}\n          key={index + 1}\n          handleDeleteCard={handleDeleteCard}\n          id={index + 1}\n        />\n      ))}\n      <Link to=\"/newCard\" className={style.addCardButton}>\n        <AddButton />\n      </Link>\n    </section>\n  );\n};\n\nexport default ListCardsMobile;\n\n//<button type='button' className={`${style.addCard} ${style.selectedBtn}`}><IoAddSharp/></button>\n","import style from '../components/moneyGuard.module.scss';\nimport ListCardsMobile from '../components/ListCardsMobile';\nimport Nav from '../components/Nav';\n\nconst Home = ({info,handleDeleteCard}) => {\n  return (\n    <section className={style.homePageWrapper}>\n      <div className={style.homePage}>\n        <Nav />\n        <ListCardsMobile info={info} handleDeleteCard={handleDeleteCard} />\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import style from './moneyGuard.module.scss';\nimport { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from \"react-icons/im\";\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n  const location = useLocation();\n  const pathName = location.pathname.split(\"/\")\n  const navLocation = pathName[1];\n  const linkNavLocation = `/${navLocation}`\n\n  return (\n    <nav className={style.navLinks}>\n      \n      <Link to=\"/\" className={linkNavLocation === \"/\"? `${style.selectedNav}`:null}>\n        <IoHomeSharp />\n      </Link>\n      <Link to=\"/statistics\" className={linkNavLocation === \"/statistics\"? `${style.selectedNav}`:null}>\n        <ImStatsDots />\n      </Link>\n      <Link to=\"/currency\" className={linkNavLocation === \"/currency\"? `${style.selectedNav}`:null}>\n        <BsCurrencyExchange />\n      </Link>\n    </nav>\n  );\n};\nexport default Nav\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import style from \"../moneyGuard.module.scss\"\nimport { IoAddSharp } from 'react-icons/io5';\n\n\nconst AddButton = () => {\n        return (<button type=\"button\" className={style.addButtonAll} >\n                <IoAddSharp className={style.addButtonSVG}/>\n        </button>)\n}\n\nexport default AddButton\n","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","import style from './moneyGuard.module.scss';\n\nconst Balance = ({ info }) => {\n  const balance = info.reduce((acc, data) => {\n    if (data.expense === false) {\n      return acc + Number(data.amount);\n    } else if (data.expense === true) {\n      return acc - Number(data.amount);\n    }\n    return acc;\n  }, 0);\n\n  return (\n    <div className={style.totalSum}>\n      <p> Balance: </p>\n      <p>\n        <span\n          style={{\n            color: balance <= 0 ? '#be242496' : 'rgb(194, 240, 126)',\n            fontWeight: 900,\n          }}\n        >\n          {' '}\n          {new Intl.NumberFormat('fr-FR').format(balance.toFixed(2))}\n        </span>\n        <span style={{marginLeft: \"10px\"}}>RON</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n"],"names":["_ref","data","handleDeleteCard","id","date","type","category","details","amount","_jsx","className","styles","cardwithColor","style","backgroundColor","children","_jsxs","card","cardRow","cardRowName","cardRowValue","color","textAlign","wordSpacing","Intl","NumberFormat","format","Number","toFixed","cardRowButtons","selectedBtn","onClick","MdDeleteOutline","Link","to","concat","notSelectedBtn","MdOutlineModeEdit","info","isSelectedYear","setIsSelectedYear","useState","currentYear","isSelectedMonth","setIsSelectedMonth","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","filterYearsForSelection","map","year","filter","el","index","arr","indexOf","sort","a","b","localeCompare","number","name","handleMonth","value","useEffect","availableMonths","month","uniqueMonths","Set","filteredMonths","months","includes","push","arrDataByYear","Date","arrDataByYearAndMonth","arrDataToDisplay","listCards","Balance","ModalTime","initialValue","infoPeriod","handleYear","Card","addCardButton","AddButton","homePageWrapper","homePage","Nav","ListCardsMobile","navLocation","useLocation","pathname","split","linkNavLocation","navLinks","selectedNav","IoHomeSharp","ImStatsDots","BsCurrencyExchange","isModalOn","setisModalOn","modalRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","statisticsPeriod","ref","headerPeriodOff","headerPeriodOn","e","preventDefault","prev","FaChevronUp","FaAngleDown","listPeriod","item","handleOptionSelect","nanoid","addButtonAll","IoAddSharp","addButtonSVG","todayNewDate","getFullYear","currentMonth","getMonth","toString","padStart","currentMonthLetter","currentDay","getDate","today","balance","reduce","acc","expense","totalSum","fontWeight","marginLeft"],"sourceRoot":""}