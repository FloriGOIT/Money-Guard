{"version":3,"file":"static/js/572.e54a790d.chunk.js","mappings":"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","sources":["components/DonutChart.jsx","components/ModalTime.jsx","components/Nav.jsx","helpers/timeInfo.jsx","pages/ExpensesStatistics.jsx"],"sourcesContent":["import { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport style from './moneyGuard.module.scss';\n\nconst CustomTooltip = ({ active, payload, info }) => {\n  if (active && payload && payload.length) {\n    const { category, total, color } = payload[0].payload;\n    const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n    const percentage = ((total / totalSum) * 100).toFixed(1);\n\n    return (\n      <div\n        style={{\n          background: '#1f1f1f',\n          padding: '8px 8px',\n          borderRadius: '10px',\n          color: '#fff',\n          border: `2px solid ${color}`,\n          boxShadow: '0 0 5px rgba(0,0,0,0.3)',\n        }}\n      >\n        <p style={{ margin: 0, fontWeight: 'bold', fontSize: '14px' }}>\n          {category}\n        </p>\n        <p style={{ margin: 0, fontSize: '14px' }}>{percentage}%</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst DonutChart = ({ info }) => {\n  const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n\n  return (\n    <div\n      style={{ textAlign: 'center', width: '300px', margin: '0 auto', position:\"static\" }}\n      className={style.chart}\n    >\n\n      <div style={{ margin: '0 auto', position:\"relative\" }}>\n        <PieChart width={285} height={285} style={{ margin: '0 auto' }}>\n          <Pie\n            data={info}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={140}\n            dataKey=\"total\"\n            nameKey=\"category\"\n          >\n            {info.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n          <Tooltip content={<CustomTooltip />} info={info} />\n        </PieChart>\n\n        {/* Center text */}\n        <div\n          style={{\n            position: 'absolute',\n            top: '120px',\n            left: '50%',\n            transform: 'translateX(-52%)',\n            fontWeight: '900',\n            fontSize: '30px',\n            color: 'rgba(255, 130, 130, 1)',\n            paddingLeft:\"10px\"\n          }}\n        >\n          {new Intl.NumberFormat('fr-FR').format(totalSum.toFixed(2))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import style from './moneyGuard.module.scss';\nimport { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from \"react-icons/im\";\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n  const location = useLocation();\n  const pathName = location.pathname.split(\"/\")\n  const navLocation = pathName[1];\n  const linkNavLocation = `/${navLocation}`\n\n  return (\n    <nav className={style.navLinks}>\n      \n      <Link to=\"/\" className={linkNavLocation === \"/\"? `${style.selectedNav}`:null}>\n        <IoHomeSharp />\n      </Link>\n      <Link to=\"/statistics\" className={linkNavLocation === \"/statistics\"? `${style.selectedNav}`:null}>\n        <ImStatsDots />\n      </Link>\n      <Link to=\"/currency\" className={linkNavLocation === \"/currency\"? `${style.selectedNav}`:null}>\n        <BsCurrencyExchange />\n      </Link>\n    </nav>\n  );\n};\nexport default Nav\n","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","import Nav from 'components/Nav';\nimport style from '../components/moneyGuard.module.scss';\nimport { months } from '../helpers/timeInfo';\nimport { currentYear } from '../helpers/timeInfo';\nimport ModalTime from '../components/ModalTime';\nimport { useEffect, useState } from 'react';\nimport DonutChart from 'components/DonutChart';\n\nconst ExpensesStatistics = ({ info }) => {\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n  const [selectedMonthAndYear, setSelectedMonthAndYear] = useState([]);\n\n  const handleMonth = value => setIsSelectedMonth(value);\n  const handleYear = value => setIsSelectedYear(value);\n\n  useEffect(() => {\n    const selectedYear = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const availableMonths = selectedYear.map(info => info.month);\n    const uniqueMonths = [...new Set(availableMonths)];\n    const filteredMonths = months.filter(month =>\n      uniqueMonths.includes(month.name)\n    );\n    filteredMonths.push({ number: '-', name: '-' });\n\n    setArrayMonthInSelectedYear(filteredMonths);\n  }, [isSelectedYear, info]);\n\n  useEffect(() => {\n    const arr = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const filteredArr =\n      isSelectedMonth !== '-'\n        ? arr.filter(info => info.month === isSelectedMonth)\n        : arr;\n\n    setSelectedMonthAndYear(filteredArr);\n  }, [info, isSelectedMonth, isSelectedYear]);\n\n  const expensesArr =\n    selectedMonthAndYear.filter(transaction => transaction.type) || [];\n  const expensesArrReducer = expensesArr.reduce((acc, item) => {\n    const { category, amount, color } = item;\n    const numericAmount = parseFloat(amount);\n    if (!acc[category]) {\n      acc[category] = {\n        total: 0,\n        color: color,\n      };\n    }\n    acc[category].total += numericAmount;\n    return acc;\n  }, {});\n\n  const cumulatedExpenes = Object.entries(expensesArrReducer)\n    .map(([category, data]) => ({\n      category,\n      total: data.total,\n      color: data.color,\n    }))\n    .sort((a, b) => b.total - a.total);\n\n  const infoReducer = selectedMonthAndYear.reduce(\n    (acc, item) => {\n      const category =\n        item.type === true\n          ? 'expenses'\n          : item.type === false\n          ? 'incomes'\n          : null;\n      if (!category) return acc;\n\n      const amount = parseFloat(item.amount);\n      acc[category] += amount;\n\n      return acc;\n    },\n    {\n      incomes: 0,\n      expenses: 0,\n    }\n  );\n\n  const filterYearsForSelection = info\n    .map(info => info.date.split('-')[0])\n    .filter((year, index, array) => array.indexOf(year) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n\n\n  return (\n    <section className={style.statisticsWrapper}>\n      <Nav />\n      \n      <div className={style.statistics}>\n        <h2>Statistics</h2>\n        <ModalTime\n          initialValue={isSelectedYear}\n          infoPeriod={filterYearsForSelection}\n          handleYear={handleYear}\n          handleMonth={handleMonth}\n          name=\"years\"\n        />\n\n        <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n        />\n\n        {infoReducer.expenses > 0 ? <div className={style.chartWrapper}>\n          <DonutChart info={cumulatedExpenes} />\n        </div> : null}\n\n        <div className={style.tableHeaderCategories}>\n          <span>Category</span>\n          <span>Sum</span>\n        </div>\n        {cumulatedExpenes.map(expense => {\n          return (\n            <div key={expense.category} className={style.tableRowsCategories}>\n              <div className={style.categoryWithColor}>\n                <span style={{ backgroundColor: `${expense.color}` }}></span>\n                <span>{expense.category}</span>\n              </div>\n              <span className={style.categoryAmount}>\n                {new Intl.NumberFormat('fr-FR').format(Number(expense.total).toFixed(2)) }\n              </span>\n            </div>\n          );\n        })}\n\n        <div className={style.totalCategories}>\n          <div className={style.totalIncomes}>\n            <span>Incomes:</span>\n            <span>{new Intl.NumberFormat('fr-FR').format(Number(infoReducer.incomes).toFixed(2)) }</span>\n          </div>\n\n          <div className={style.totalExpenses}>\n            <span>Expenses:</span>\n            <span>{new Intl.NumberFormat('fr-FR').format(Number(infoReducer.expenses).toFixed(2)) }</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ExpensesStatistics;\n\n/*\n\n\n\n        */\n"],"names":["CustomTooltip","_ref","active","payload","info","length","_payload$0$payload","category","total","color","percentage","reduce","acc","item","toFixed","_jsxs","style","background","padding","borderRadius","border","concat","boxShadow","children","_jsx","margin","fontWeight","fontSize","_ref2","totalSum","textAlign","width","position","className","PieChart","height","Pie","data","cx","cy","innerRadius","outerRadius","dataKey","nameKey","map","entry","index","Cell","fill","Tooltip","content","top","left","transform","paddingLeft","Intl","NumberFormat","format","infoPeriod","initialValue","name","handleMonth","handleYear","_useState","useState","_useState2","_slicedToArray","isModalOn","setisModalOn","modalRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","type","onClick","e","preventDefault","prev","FaChevronUp","FaAngleDown","value","nanoid","navLocation","useLocation","pathname","split","linkNavLocation","Link","to","IoHomeSharp","ImStatsDots","BsCurrencyExchange","months","number","todayNewDate","Date","currentYear","getFullYear","currentMonth","getMonth","toString","padStart","currentMonthLetter","filter","el","Number","currentDay","getDate","today","isSelectedMonth","setIsSelectedMonth","_useState3","_useState4","isSelectedYear","setIsSelectedYear","_useState5","_useState6","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","_useState7","_useState8","selectedMonthAndYear","setSelectedMonthAndYear","availableMonths","year","month","uniqueMonths","_toConsumableArray","Set","filteredMonths","includes","push","arr","filteredArr","expensesArrReducer","transaction","amount","numericAmount","parseFloat","cumulatedExpenes","Object","entries","_ref3","sort","a","b","infoReducer","incomes","expenses","filterYearsForSelection","date","array","indexOf","localeCompare","Nav","ModalTime","DonutChart","expense","backgroundColor"],"sourceRoot":""}