{"version":3,"file":"static/js/97.42cb51ce.chunk.js","mappings":"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","sources":["components/Nav.jsx","components/Card.jsx","components/ListCardsMobile.jsx","pages/Home.jsx"],"sourcesContent":["import style from './moneyGuard.module.scss';\nimport { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from \"react-icons/im\";\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n  const location = useLocation();\n  const pathName = location.pathname.split(\"/\")\n  const navLocation = pathName[1];\n  const linkNavLocation = `/${navLocation}`\n\n  return (\n    <nav className={style.navLinks}>\n      \n      <Link to=\"/\" className={linkNavLocation === \"/\"? `${style.selectedNav}`:null}>\n        <IoHomeSharp />\n      </Link>\n      <Link to=\"/statistics\" className={linkNavLocation === \"/statistics\"? `${style.selectedNav}`:null}>\n        <ImStatsDots />\n      </Link>\n      <Link to=\"/currency\" className={linkNavLocation === \"/currency\"? `${style.selectedNav}`:null}>\n        <BsCurrencyExchange />\n      </Link>\n    </nav>\n  );\n};\nexport default Nav\n","import styles from '../components/moneyGuard.module.scss';\nimport { Link } from 'react-router-dom';\nimport { MdOutlineModeEdit } from 'react-icons/md';\nimport { MdDeleteOutline } from 'react-icons/md';\n\nconst Card = ({data,handleDeleteCard}) => {\n        const {id, date, type, category, details, amount } = data;\n  return (\n    <div className={styles.cardwithColor} style={{backgroundColor: type === false ? \"rgb(119, 235, 65)\": \"rgb(207, 47, 47)\" }}>\n      <div className={styles.card}>\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Date</span>\n          <span className={styles.cardRowValue}>{date}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Type</span>\n          <span className={styles.cardRowValue}>{type === false ?\"Income\":'Expense'}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Category</span>\n          <span className={styles.cardRowValue}>{category}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Details</span>\n          <span className={styles.cardRowValue} style={{color:'wheat', textAlign:\"end\", wordSpacing:\"0.3em\"}}>{details}</span>\n        </div>\n\n        <div className={styles.cardRow}>\n          <span className={styles.cardRowName}>Sum</span>\n          <span className={styles.cardRowValue}>{amount}</span>\n        </div>\n\n        <div className={styles.cardRowButtons}>\n          <button type=\"button\" className={styles.selectedBtn} onClick={()=>handleDeleteCard(id)}>\n            <MdDeleteOutline/>\n          </button>\n          <Link to={`/newCard/${id}`}>\n            <button type=\"button\" className={styles.notSelectedBtn}>\n              <MdOutlineModeEdit />\n            </button>\n          </Link>\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import style from './moneyGuard.module.scss';\nimport Card from './Card';\nimport { IoAddSharp } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\nimport ModalTime from './ModalTime';\nimport { useState,useEffect } from 'react';\nimport { months, currentYear } from 'helpers/timeInfo';\nimport Balance from './Balance';\n\nconst ListCardsMobile = ({ info, handleDeleteCard }) => {\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n\n\n  const handleYear = value => setIsSelectedYear(value);\n  const filterYearsForSelection = info\n    .map(card => card.year)\n    .filter((el, index, arr) => arr.indexOf(el) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n  \nconst handleMonth = value => setIsSelectedMonth(value);\n  \n    useEffect(() => {\n      const selectedYear = info.filter(\n        info => Number(info.year) === Number(isSelectedYear)\n      );\n      const availableMonths = selectedYear.map(info => info.month);\n      const uniqueMonths = [...new Set(availableMonths)];\n      const filteredMonths = months.filter(month =>\n        uniqueMonths.includes(month.name)\n      );\n      filteredMonths.push({ number: '-', name: '-' });\n  \n      setArrayMonthInSelectedYear(filteredMonths);\n    }, [isSelectedYear, info]);\n\n  const arrDataByYear = info.filter(data => Number(data.year) === Number(isSelectedYear))\n  .sort((a, b) => new Date(b.date) - new Date(a.date));\n  const arrDataByYearAndMonth = arrDataByYear.filter(data => data.month === isSelectedMonth)\n  const arrDataToDisplay = isSelectedMonth === \"-\" ? arrDataByYear : arrDataByYearAndMonth\n\n\n  return (\n    <section className={style.listCards}>\n      <Balance info={info} />\n\n      <ModalTime\n        initialValue={isSelectedYear}\n        infoPeriod={filterYearsForSelection}\n        handleYear={handleYear}\n        handleMonth={handleMonth}\n        name=\"years\"\n      />\n\n      <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n      />\n\n      {arrDataToDisplay.map((data, index) => (\n        <Card\n          data={data}\n          key={index + 1}\n          handleDeleteCard={handleDeleteCard}\n          id={index + 1}\n        />\n      ))}\n      <Link to=\"/newCard\" className={style.addCardButton}>\n        <IoAddSharp />\n      </Link>\n    </section>\n  );\n};\n\nexport default ListCardsMobile;\n\n//<button type='button' className={`${style.addCard} ${style.selectedBtn}`}><IoAddSharp/></button>\n","import style from '../components/moneyGuard.module.scss';\nimport ListCardsMobile from '../components/ListCardsMobile';\nimport Nav from 'components/Nav';\n\nconst Home = ({info,handleDeleteCard}) => {\n  return (\n    <section className={style.homePageWrapper}>\n      <div className={style.homePage}>\n        <Nav />\n        <ListCardsMobile info={info} handleDeleteCard={handleDeleteCard} />\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["navLocation","useLocation","pathname","split","linkNavLocation","concat","_jsxs","className","style","children","_jsx","Link","to","IoHomeSharp","ImStatsDots","BsCurrencyExchange","_ref","data","handleDeleteCard","id","date","type","category","details","amount","styles","backgroundColor","color","textAlign","wordSpacing","onClick","MdDeleteOutline","MdOutlineModeEdit","info","_useState","useState","currentYear","_useState2","_slicedToArray","isSelectedYear","setIsSelectedYear","_useState3","_useState4","isSelectedMonth","setIsSelectedMonth","_useState5","_useState6","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","filterYearsForSelection","map","card","year","filter","el","index","arr","indexOf","sort","a","b","localeCompare","number","name","handleMonth","value","useEffect","availableMonths","Number","month","uniqueMonths","_toConsumableArray","Set","filteredMonths","months","includes","push","arrDataByYear","Date","arrDataByYearAndMonth","arrDataToDisplay","Balance","ModalTime","initialValue","infoPeriod","handleYear","Card","IoAddSharp","Nav","ListCardsMobile"],"sourceRoot":""}