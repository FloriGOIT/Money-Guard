{"version":3,"file":"static/js/515.71992ea6.chunk.js","mappings":"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","sources":["components/Nav.jsx","components/ModalTime.jsx","pages/ExpensesStatistics.jsx","helpers/timeInfo.jsx","components/DonutChart.jsx"],"sourcesContent":["import style from './moneyGuard.module.scss';\nimport { IoHomeSharp } from 'react-icons/io5';\nimport { ImStatsDots } from \"react-icons/im\";\nimport { BsCurrencyExchange } from 'react-icons/bs';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n  const location = useLocation();\n  const pathName = location.pathname.split(\"/\")\n  const navLocation = pathName[1];\n  const linkNavLocation = `/${navLocation}`\n\n  return (\n    <nav className={style.navLinks}>\n      \n      <Link to=\"/\" className={linkNavLocation === \"/\"? `${style.selectedNav}`:null}>\n        <IoHomeSharp />\n      </Link>\n      <Link to=\"/statistics\" className={linkNavLocation === \"/statistics\"? `${style.selectedNav}`:null}>\n        <ImStatsDots />\n      </Link>\n      <Link to=\"/currency\" className={linkNavLocation === \"/currency\"? `${style.selectedNav}`:null}>\n        <BsCurrencyExchange />\n      </Link>\n    </nav>\n  );\n};\nexport default Nav\n","import style from '../components/moneyGuard.module.scss';\nimport { useState, useEffect, useRef } from 'react';\nimport { FaAngleDown } from 'react-icons/fa6';\nimport { FaChevronUp } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\n\nconst ModalTime = ({ infoPeriod, initialValue, name, handleMonth, handleYear }) => {\n  const [isModalOn, setisModalOn] = useState(false);\n  const modalRef = useRef(null); // Step 1: Create a ref\n  // Step 2: Click outside logic\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setisModalOn(false);\n      }\n    };\n\n    if (isModalOn) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isModalOn]);\n\n  const handleOptionSelect = (value) => {\n    setisModalOn(false);\n    if (name === \"months\") handleMonth(value);\n    if (name === \"years\") {\n      handleMonth(\"-\");\n      handleYear(value);\n    }\n  };\n\n  return (\n    <div className={style.statisticsPeriod} ref={modalRef}>\n      <div className={isModalOn ? `${style.headerPeriodOff} ${style.headerPeriodOn}`: `${style.headerPeriodOff}`}>\n        <span>{initialValue}</span>\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.preventDefault();\n            setisModalOn((prev) => !prev);\n          }}\n        >\n          {isModalOn ? <FaChevronUp /> : <FaAngleDown />}\n        </button>\n      </div>\n      {isModalOn && (\n        <ul className={`${style.listPeriod} ${style[name]}`}>\n          {infoPeriod.map((item) => (\n            <li key={nanoid()}>\n              <button type=\"button\" onClick={() => handleOptionSelect(item.name)}>\n                {item.name}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ModalTime;\n\n","import Nav from '../components/Nav';\nimport style from '../components/moneyGuard.module.scss';\nimport { months,currentYear } from '../helpers/timeInfo';\nimport ModalTime from '../components/ModalTime';\nimport { useEffect, useState } from 'react';\nimport DonutChart from '../components/DonutChart';\n\nconst ExpensesStatistics = ({ info }) => {\n  const [isSelectedMonth, setIsSelectedMonth] = useState('-');\n  const [isSelectedYear, setIsSelectedYear] = useState(currentYear);\n  const [arrayMonthInSelectedYear, setArrayMonthInSelectedYear] = useState([]);\n  const [selectedMonthAndYear, setSelectedMonthAndYear] = useState([]);\n\n  const handleMonth = value => setIsSelectedMonth(value);\n  const handleYear = value => setIsSelectedYear(value);\n\n  useEffect(() => {\n    const selectedYear = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const availableMonths = selectedYear.map(info => info.month);\n    const uniqueMonths = [...new Set(availableMonths)];\n    const filteredMonths = months.filter(month =>\n      uniqueMonths.includes(month.name)\n    );\n    filteredMonths.push({ number: '-', name: '-' });\n\n    setArrayMonthInSelectedYear(filteredMonths);\n  }, [isSelectedYear, info]);\n\n  useEffect(() => {\n    const arr = info.filter(\n      info => Number(info.year) === Number(isSelectedYear)\n    );\n    const filteredArr =\n      isSelectedMonth !== '-'\n        ? arr.filter(info => info.month === isSelectedMonth)\n        : arr;\n\n    setSelectedMonthAndYear(filteredArr);\n  }, [info, isSelectedMonth, isSelectedYear]);\n\n  const expensesArr =\n    selectedMonthAndYear.filter(transaction => transaction.type) || [];\n  const expensesArrReducer = expensesArr.reduce((acc, item) => {\n    const { category, amount, color } = item;\n    const numericAmount = parseFloat(amount);\n    if (!acc[category]) {\n      acc[category] = {\n        total: 0,\n        color: color,\n      };\n    }\n    acc[category].total += numericAmount;\n    return acc;\n  }, {});\n\n  const cumulatedExpenes = Object.entries(expensesArrReducer)\n    .map(([category, data]) => ({\n      category,\n      total: data.total,\n      color: data.color,\n    }))\n    .sort((a, b) => b.total - a.total);\n\n  const infoReducer = selectedMonthAndYear.reduce(\n    (acc, item) => {\n      const category =\n        item.type === true\n          ? 'expenses'\n          : item.type === false\n          ? 'incomes'\n          : null;\n      if (!category) return acc;\n\n      const amount = parseFloat(item.amount);\n      acc[category] += amount;\n\n      return acc;\n    },\n    {\n      incomes: 0,\n      expenses: 0,\n    }\n  );\n\n  const filterYearsForSelection = info\n    .map(info => info.date.split('-')[0])\n    .filter((year, index, array) => array.indexOf(year) === index)\n    .sort((a, b) => a.localeCompare(b))\n    .map(year => {\n      return { number: year, name: year };\n    });\n\n\n  return (\n    <section className={style.statisticsWrapper}>\n      <Nav />\n      \n      <div className={style.statistics}>\n        <h2>Expenses statistics</h2>\n        <ModalTime\n          initialValue={isSelectedYear}\n          infoPeriod={filterYearsForSelection}\n          handleYear={handleYear}\n          handleMonth={handleMonth}\n          name=\"years\"\n        />\n\n        <ModalTime\n          initialValue={isSelectedMonth}\n          infoPeriod={arrayMonthInSelectedYear}\n          handleMonth={handleMonth}\n          name=\"months\"\n        />\n\n        {infoReducer.expenses > 0 ? <div className={style.chartWrapper}>\n          <DonutChart info={cumulatedExpenes} />\n        </div> : null}\n\n        <div className={style.tableHeaderCategories}>\n          <span>Category</span>\n          <span>Sum</span>\n        </div>\n        {cumulatedExpenes.map(expense => {\n          return (\n            <div key={expense.category} className={style.tableRowsCategories}>\n              <div className={style.categoryWithColor}>\n                <span style={{ backgroundColor: `${expense.color}` }}></span>\n                <span>{expense.category}</span>\n              </div>\n              <span className={style.categoryAmount}>\n                {new Intl.NumberFormat('fr-FR').format(Number(expense.total).toFixed(2)) }\n              </span>\n            </div>\n          );\n        })}\n\n        <div className={style.totalCategories}>\n          <div className={style.totalIncomes}>\n            <span>Incomes:</span>\n            <span>{new Intl.NumberFormat('fr-FR').format(Number(infoReducer.incomes).toFixed(2)) }</span>\n          </div>\n\n          <div className={style.totalExpenses}>\n            <span>Expenses:</span>\n            <span>{new Intl.NumberFormat('fr-FR').format(Number(infoReducer.expenses).toFixed(2)) }</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ExpensesStatistics;\n\n/*\n\n\n\n        */\n","export const months = [\n  { number: '01', name: 'January' },\n  { number: '02', name: 'February' },\n  { number: '03', name: 'March' },\n  { number: '04', name: 'April' },\n  { number: '05', name: 'May' },\n  { number: '06', name: 'June' },\n  { number: '07', name: 'July' },\n  { number: '08', name: 'August' },\n  { number: '09', name: 'September' },\n  { number: '10', name: 'October' },\n  { number: '11', name: 'November' },\n  { number: '12', name: 'December' },\n];\nexport const years = [\n  { number: '2025', name: '2025' },\n  { number: '2026', name: '2026' },\n  { number: '2027', name: '2027' },\n  { number: '2028', name: '2028' },\n  { number: '2029', name: '2029' },\n  { number: '2030', name: '2030' },\n];\n\nexport const todayNewDate = new Date();\nexport const currentYear = todayNewDate.getFullYear();\nexport const currentMonth = (todayNewDate.getMonth() + 1).toString().padStart(2, '0');\nconst currentMonthFilter = months.filter(el => Number(el.number) === Number(currentMonth));\nexport const currentMonthLetter = currentMonthFilter[0].name;\nexport const currentDay = todayNewDate.getDate().toString().padStart(2, '0');\nexport const today = `${currentYear}-${currentMonth}-${currentDay}`;\n\n","import { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport style from './moneyGuard.module.scss';\n\nconst CustomTooltip = ({ active, payload, info }) => {\n  if (active && payload && payload.length) {\n    const { category, total, color } = payload[0].payload;\n    const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n    const percentage = ((total / totalSum) * 100).toFixed(1);\n\n    return (\n      <div\n        style={{\n          background: '#1f1f1f',\n          padding: '8px 8px',\n          borderRadius: '10px',\n          color: '#fff',\n          border: `2px solid ${color}`,\n          boxShadow: '0 0 5px rgba(0,0,0,0.3)',\n        }}\n      >\n        <p style={{ margin: 0, fontWeight: 'bold', fontSize: '14px' }}>\n          {category}\n        </p>\n        <p style={{ margin: 0, fontSize: '14px' }}>{percentage}%</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst DonutChart = ({ info }) => {\n  const totalSum = info.reduce((acc, item) => acc + item.total, 0);\n\n  return (\n    <div\n      style={{ textAlign: 'center', width: '300px', margin: '0 auto', position:\"static\" }}\n      className={style.chart}\n    >\n\n      <div style={{ margin: '0 auto', position:\"relative\" }}>\n        <PieChart width={285} height={285} style={{ margin: '0 auto' }}>\n          <Pie\n            data={info}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={140}\n            dataKey=\"total\"\n            nameKey=\"category\"\n          >\n            {info.map((entry, index) => (\n              <Cell style={{outline: 'none'}} key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n          <Tooltip content={<CustomTooltip />} info={info} />\n        </PieChart>\n\n        {/* Center text */}\n        <div\n          style={{\n            position: 'absolute',\n            top: '120px',\n            left: '50%',\n            transform: 'translateX(-52%)',\n            fontWeight: '900',\n            fontSize: '30px',\n            color: 'rgba(255, 130, 130, 1)',\n            paddingLeft:\"10px\"\n          }}\n        >\n          {new Intl.NumberFormat('fr-FR').format(totalSum.toFixed(2))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DonutChart;\n"],"names":["Nav","navLocation","useLocation","pathname","split","linkNavLocation","concat","_jsxs","className","style","navLinks","children","_jsx","Link","to","selectedNav","IoHomeSharp","ImStatsDots","BsCurrencyExchange","_ref","infoPeriod","initialValue","name","handleMonth","handleYear","isModalOn","setisModalOn","useState","modalRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","statisticsPeriod","ref","headerPeriodOff","headerPeriodOn","type","onClick","e","preventDefault","prev","FaChevronUp","FaAngleDown","listPeriod","map","item","handleOptionSelect","value","nanoid","info","isSelectedMonth","setIsSelectedMonth","isSelectedYear","setIsSelectedYear","currentYear","arrayMonthInSelectedYear","setArrayMonthInSelectedYear","selectedMonthAndYear","setSelectedMonthAndYear","availableMonths","filter","Number","year","month","uniqueMonths","Set","filteredMonths","months","includes","push","number","arr","filteredArr","expensesArrReducer","transaction","reduce","acc","category","amount","color","numericAmount","parseFloat","total","cumulatedExpenes","Object","entries","_ref2","data","sort","a","b","infoReducer","incomes","expenses","filterYearsForSelection","date","index","array","indexOf","localeCompare","statisticsWrapper","statistics","ModalTime","chartWrapper","DonutChart","tableHeaderCategories","expense","tableRowsCategories","categoryWithColor","backgroundColor","categoryAmount","Intl","NumberFormat","format","toFixed","totalCategories","totalIncomes","totalExpenses","todayNewDate","Date","getFullYear","currentMonth","getMonth","toString","padStart","currentMonthLetter","el","currentDay","getDate","today","CustomTooltip","active","payload","length","percentage","background","padding","borderRadius","border","boxShadow","margin","fontWeight","fontSize","totalSum","textAlign","width","position","chart","PieChart","height","Pie","cx","cy","innerRadius","outerRadius","dataKey","nameKey","entry","Cell","outline","fill","Tooltip","content","top","left","transform","paddingLeft"],"sourceRoot":""}